{"version":3,"sources":["Assets/Logo.svg","common/Components/Background/Background.module.scss","common/Components/Header/Header.module.scss","common/Components/Header/HeaderLogo.jsx","common/Components/Header/HeaderLinks.jsx","common/Components/Header/Header.jsx","common/Components/Background/Background.jsx","App.js","serviceWorker.js","index.js","App.module.scss"],"names":["module","exports","Logo","className","styles","logo","href","src","logoSVG","alt","HeaderLinks","props","List","list","style","flexDirection","display","ListItem","Tooltip","id","title","placement","window","innerWidth","classes","tooltip","IconButton","aria-label","onClick","text","dummy","document","createElement","body","appendChild","setAttribute","select","execCommand","removeChild","copyToClipboard","alert","color","listItem","target","rel","Header","useState","mobileOpen","setMobileOpen","handleDrawerToggle","AppBar","appBar","Toolbar","toolBar","width","Hidden","smDown","implementation","mdUp","float","Drawer","variant","anchor","open","onClose","defaultProp","Background","background","params","fpsLimit","particles","value","links","distance","enable","opacity","number","density","value_area","shape","type","size","random","detectRetina","App","StylesProvider","injectFirst","main","titleGroup","titleName","titleContent","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.bd3524e3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Logo.33fadb9a.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"background\":\"Background_background__1-C-2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appBar\":\"Header_appBar__1GnQ5\",\"tooltip\":\"Header_tooltip__31fJJ\",\"toolBar\":\"Header_toolBar__lnpS-\",\"container\":\"Header_container__tSu5p\",\"list\":\"Header_list__1dgxl\",\"listItem\":\"Header_listItem__1Q5sg\",\"logo\":\"Header_logo__3C_B6\",\"menu\":\"Header_menu__1ovlq\",\"nav\":\"Header_nav__3OpeO\",\"menuItem\":\"Header_menuItem__2XNEC\",\"icons\":\"Header_icons__3VOM-\",\"socialIcons\":\"Header_socialIcons__3nQ67\",\"social\":\"Header_social__3tqu9\"};","import React from \"react\";\nimport logoSVG from \"../../../Assets/Logo.svg\";\nimport styles from \"./Header.module.scss\";\nconst Logo = () => {\n  return (\n    <div className={styles.logo}>\n      <a href={\"/\"}>\n        <img src={logoSVG} alt={\"Logo for Dylan Wootton's website\"}></img>\n      </a>\n    </div>\n  );\n};\n\nexport default Logo;\n","import React from \"react\";\n\n// react components for routing our app without refresh\nimport {Link} from \"react-router-dom\";\n\n// @material-ui/core components\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport styles from \"./Header.module.scss\";\nimport Button from \"@material-ui/core/Button\";\nimport {IconButton} from \"@material-ui/core\";\nimport TwitterIcon from \"@material-ui/icons/Twitter\";\nimport LinkedInIcon from \"@material-ui/icons/LinkedIn\";\nimport MailIcon from \"@material-ui/icons/Mail\";\nexport default function HeaderLinks(props) {\n  return (\n    <List className={styles.list} style={{flexDirection: \"row\", display: \"flex\"}}>\n      <ListItem>\n        <Tooltip\n          id='mail-tooltip'\n          title='Click to copy email to clipboard.'\n          placement={window.innerWidth > 500 ? \"top\" : \"left\"}\n          classes={{tooltip: styles.tooltip}}>\n          <IconButton\n            aria-label='delete'\n            onClick={() => {\n              copyToClipboard(\"wootton.dylan@gmail.com\");\n              alert(\"copied email to keyboard\");\n            }}>\n            <MailIcon color={\"white\"} />\n          </IconButton>\n        </Tooltip>\n      </ListItem>\n      <ListItem className={styles.listItem}>\n        <Tooltip\n          id='instagram-twitter'\n          title='Follow us on twitter'\n          placement={window.innerWidth > 500 ? \"top\" : \"left\"}\n          classes={{tooltip: styles.tooltip}}>\n          <IconButton\n            aria-label='delete'\n            href='https://twitter.com/WoottonDylan'\n            target='_blank'\n            rel='noopener noreferrer'>\n            <TwitterIcon color={\"white\"} />\n          </IconButton>\n        </Tooltip>\n      </ListItem>\n      <ListItem className={styles.listItem}>\n        <Tooltip\n          id='instagram-twitter'\n          title='Follow me on Linkedin'\n          placement={window.innerWidth > 500 ? \"top\" : \"left\"}\n          classes={{tooltip: styles.tooltip}}>\n          <IconButton\n            aria-label='delete'\n            href='https://www.linkedin.com/in/dylanwootton/'\n            target='_blank'\n            rel='noopener noreferrer'>\n            <LinkedInIcon color={\"white\"} />\n          </IconButton>\n        </Tooltip>\n      </ListItem>\n    </List>\n  );\n}\n\nfunction copyToClipboard(text) {\n  var dummy = document.createElement(\"input\");\n  document.body.appendChild(dummy);\n  dummy.setAttribute(\"value\", text);\n  dummy.select();\n  document.execCommand(\"copy\");\n  document.body.removeChild(dummy);\n}\n","import React, {useState} from \"react\";\nimport Logo from \"./HeaderLogo\";\n/*import Menu from \"./Menu\";*/\nimport styles from \"./Header.module.scss\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Button from \"@material-ui/core/Button\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Menu from \"@material-ui/icons/Menu\";\nimport HeaderLinks from \"./HeaderLinks\";\n\nconst Header = (props) => {\n  const [mobileOpen, setMobileOpen] = useState(false);\n\n  const handleDrawerToggle = () => {\n    setMobileOpen(!mobileOpen);\n  };\n\n  return (\n    <AppBar className={styles.appBar} style={{\"background-color\": \"white\"}}>\n      <Toolbar className={styles.toolBar} style={{width: \"100%\"}}>\n        <Logo />\n        <Hidden smDown implementation='css'>\n          <HeaderLinks></HeaderLinks>\n        </Hidden>\n        <Hidden mdUp>\n          <IconButton\n            style={{float: \"right\"}}\n            color='inherit'\n            aria-label='open drawer'\n            onClick={handleDrawerToggle}>\n            <Menu />\n          </IconButton>\n        </Hidden>\n      </Toolbar>\n      <Hidden mdUp implementation='js'>\n        <Drawer variant='temporary' anchor={\"top\"} open={mobileOpen} onClose={handleDrawerToggle}>\n          <div>\n            {\" \"}\n            <HeaderLinks></HeaderLinks>\n          </div>\n        </Drawer>\n      </Hidden>\n    </AppBar>\n  );\n};\n\nHeader.defaultProp = {\n  color: \"white\",\n};\n\nexport default Header;\n","import React from \"react\";\nimport Particles from \"react-particles-js\";\nimport styles from \"./Background.module.scss\";\nconst Background = () => {\n  return (\n    <div className={styles.background}>\n      <Particles\n        params={{\n          fpsLimit: 45,\n          particles: {\n            color: {\n              value: \"#262626\",\n            },\n            links: {\n              color: \"#262626\",\n              distance: 150,\n              enable: true,\n              opacity: 0.3,\n              width: 1,\n            },\n            number: {\n              density: {\n                enable: true,\n                value_area: 800,\n              },\n              value: 20,\n            },\n            opacity: {\n              value: 0.3,\n            },\n            shape: {\n              type: \"circle\",\n            },\n            size: {\n              random: true,\n              value: 5,\n            },\n          },\n          detectRetina: true,\n        }}\n      />\n    </div>\n  );\n};\n\nexport default Background;\n","import React from \"react\";\nimport styles from \"./App.module.scss\";\nimport {StylesProvider} from \"@material-ui/core/styles\";\n\nimport Header from \"./common/Components/Header/Header\";\nimport Background from \"./common/Components/Background/Background\";\nconst dashboardRoutes = [];\n\nfunction App() {\n  //const ref = useRef(Parallax)\n  return (\n    <StylesProvider injectFirst>\n      <div className={styles.App}>\n        <Background></Background>\n\n        <Header></Header>\n        <div className={styles.main}>\n          <div className={styles.titleGroup}>\n            <h4 className={styles.titleName}> Dylan Wootton </h4>\n            <h1 className={styles.title}> Data Visualization Engineer </h1>\n            <p className={styles.titleContent}>\n              I develop interactive visualization tools that makes data science easier. Currently, I\n              am visualizing product telemetry data at Microsoft.\n              <br></br>\n              <br></br>\n              Previously visualizing <a href={\"/project/ArcticExplorer\"}>Arctic Ice</a> data at the{\" \"}\n              <a target={\"blank\"} href={\"https://vdl.sci.utah.edu/\"}>\n                Visualization Design Lab\n              </a>\n              . Future researcher at{\" \"}\n              <a target={\"blank\"} href={\"http://vis.csail.mit.edu/\"}>\n                MIT Viz\n              </a>\n              .\n            </p>\n          </div>\n        </div>\n      </div>\n    </StylesProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"App_root__2CSG3\",\"title\":\"App_title__2oBiX\",\"titleName\":\"App_titleName__2VuTV\",\"titleContent\":\"App_titleContent__tNckP\",\"App\":\"App_App__15LM-\",\"main\":\"App_main__uN9ca\",\"header\":\"App_header__2L3DO\",\"titleGroup\":\"App_titleGroup__3GHRu\",\"App-logo\":\"App_App-logo__1GLNd\",\"secondPage\":\"App_secondPage__2FEBH\",\"landingContainer\":\"App_landingContainer__EhrCT\",\"App-header\":\"App_App-header__3nnPn\",\"App-link\":\"App_App-link__TRj1P\",\"up\":\"App_up__L7yvh\",\"social\":\"App_social__tfh7z\",\"nav\":\"App_nav__UeHIZ\",\"App-logo-spin\":\"App_App-logo-spin__1EbLw\"};"],"sourceRoot":""}