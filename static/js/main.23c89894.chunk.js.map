{"version":3,"sources":["common/Animations/Animations.jsx","common/Components/Header/Header.module.scss","Assets/Logo.svg","common/Components/Header/HeaderLogo.jsx","common/Components/Header/Header.jsx","common/Components/Main/Main.jsx","App.js","serviceWorker.js","index.js","App.module.scss","common/Components/Header/HeaderLinks.jsx"],"names":["Trail","children","delay","items","React","Children","toArray","trail","useTrail","length","from","transform","opacity","map","spring","index","div","key","className","style","module","exports","Logo","color","styles","logo","exact","to","width","height","viewBox","fill","xmlns","d","y","x","Header","props","useState","drawerOpen","setDrawerOpen","handleDrawerToggle","AppBar","appBar","elevation","Toolbar","toolBar","IconButton","float","aria-label","onClick","Hidden","implementation","Drawer","variant","anchor","classes","overlayDrawer","open","onClose","HeaderLinks","defaultProp","Loading","error","console","log","ProjectRoutes","Loadable","loader","loading","Portfolio","Home","About","withRouter","location","TransitionGroup","CSSTransition","timeout","classNames","path","component","App","history","createHistory","listen","action","window","scrollTo","StylesProvider","injectFirst","main","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message","MENU_ITEM_TYPES","MENU_ITEMS","type","displayText","MenuItem","content","item","selected","href","target","rel","EmailCopyButton","defaultOptions","loop","autoplay","animationData","rendererSettings","preserveAspectRatio","mapper","toCopy","copied","options","isPaused","isStopped","copiedText","emailContent","setEmailContent","id","title","placement","tooltip","enterDelay","leaveDelay","listItemButton","onMouseLeave","setTimeout","event","copyEmail","e","a","clipboard","preventDefault","writeText","NavigationMenu","useLocation","class"],"mappings":"mMAKcA,EAAQ,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,SAAiC,IAAvBC,aAAuB,MAAjB,EAAiB,EAChDC,GADgD,oCACxCC,IAAMC,SAASC,QAAQL,IAC/BM,EAAQC,YAASL,EAAMM,OAAQ,CACnCF,MAAM,IACNL,MAAMA,EACNQ,KAAM,CAACC,UAAU,qBAAsBC,QAAQ,GAAIA,QAAQ,EAAED,UAAU,uBAEzE,OACI,6BACGJ,EAAMM,KAAI,SAACC,EAAQC,GAAT,OACT,kBAAC,IAASC,IAAV,CACEC,IAAKF,EACLG,UAAU,cACVC,MAAOL,GACNX,EAAMY,U,yjKClBrBK,EAAOC,QAAU,CAAC,OAAS,uBAAuB,QAAU,wBAAwB,UAAY,0BAA0B,KAAO,qBAAqB,SAAW,yBAAyB,KAAO,qBAAqB,KAAO,qBAAqB,IAAM,oBAAoB,SAAW,yBAAyB,MAAQ,sBAAsB,QAAU,wBAAwB,WAAa,2BAA2B,OAAS,uBAAuB,YAAc,4BAA4B,YAAc,4BAA4B,cAAgB,8BAA8B,aAAe,6BAA6B,kBAAkB,gCAAgC,OAAS,uBAAuB,eAAiB,iC,sICgF1rB,IAzEf,I,yBC2BeC,EA9BF,SAAC,GAAuB,IAAD,IAArBC,aAAqB,MAAf,UAAe,EAClC,OACE,yBAAKL,UAAWM,IAAOC,MACrB,kBAAC,IAAD,CAASC,OAAK,EAACC,GAAI,KACjB,yBACEC,MAAM,MACNC,OAAO,KACPC,QAAQ,aACRC,KAAK,OACLC,MAAM,8BACN,0BACEC,EAAE,uoiBACFF,KAAMR,IAER,0BACEU,EAAE,uvNACFF,KAAMR,IAGR,0BAAOW,EAAE,IAAIN,MAAM,IAAIC,OAAO,KAAKE,KAAMR,IACzC,0BAAOW,EAAE,KAAKC,EAAE,MAAMP,MAAM,IAAIC,OAAO,IAAIE,KAAMR,IACjD,0BAAOW,EAAE,KAAKC,EAAE,KAAKP,MAAM,IAAIC,OAAO,KAAKE,KAAMR,IACjD,0BAAOW,EAAE,KAAKC,EAAE,OAAOP,MAAM,IAAIC,OAAO,IAAIE,KAAMR,IAClD,0BAAOW,EAAE,IAAIC,EAAE,KAAKP,MAAM,IAAIC,OAAO,KAAKE,KAAMR,Q,2GCbpDa,EAAS,SAACC,GAAW,IAAD,EACYC,oBAAS,GADrB,mBACjBC,EADiB,KACLC,EADK,KAGlBC,EAAqB,WACzBD,GAAeD,IAGjB,OACE,kBAACG,EAAA,EAAD,CAAQxB,UAAWM,IAAOmB,OAAQC,UAAW,EAAGzB,MAAO,CAAC,mBAAoB,UAC1E,kBAAC0B,EAAA,EAAD,CAAS3B,UAAWM,IAAOsB,QAAS3B,MAAO,CAACS,MAAO,SACjD,kBAAC,EAAD,MAIE,kBAACmB,EAAA,EAAD,CACE5B,MAAO,CAAC6B,MAAO,SACfzB,MAAM,UACN0B,aAAW,cACXC,QAAST,GACT,kBAAC,IAAD,QAII,kBAACU,EAAA,EAAD,CAAQC,eAAe,MAEjC,kBAACC,EAAA,EAAD,CAAQC,QAAQ,YAAaC,OAAQ,MAAOC,QAAShC,IAAOiC,cAAgBC,KAAMnB,EAAYoB,QAASlB,GACnG,yBAAKvB,UAAWM,IAAOiC,eACvB,kBAACZ,EAAA,EAAD,CAAS3B,UAAWM,IAAOsB,QAAS3B,MAAO,CAACS,MAAO,SACjD,kBAAC,IAAD,KACE,kBAAC,EAAD,CAAML,MAAO,WAMjB,kBAACwB,EAAA,EAAD,CACE5B,MAAO,CAAC6B,MAAO,QAASzB,MAAM,WAC9B0B,aAAW,cACXC,QAAST,GACT,kBAAC,IAAD,QAIC,IACD,kBAACmB,EAAA,EAAD,CAAaV,QAAST,SASlCL,EAAOyB,YAAc,CACnBtC,MAAO,SAGMa,Q,mCC/Df,SAAS0B,EAAT,GACE,OAD0B,EAATC,MAER,cAEPC,QAAQC,IAAI,sBACL,2CAIX,IAAMC,EAAgBC,IAAS,CAC7BC,OAAQ,kBAAM,+BACdC,QAASP,IAGLQ,EAAYH,IAAS,CACzBC,OAAQ,kBAAM,+BACdC,QAASP,IAGLS,EAAOJ,IAAS,CACpBC,OAAQ,kBAAM,qDACdC,QAASP,IAGLU,EAAQL,IAAS,CACrBC,OAAQ,kBAAM,mCACdC,QAASP,IAyBIW,eArBF,SAAC,GAAc,IAAbC,EAAY,EAAZA,SACX,OAAO,kBAACC,EAAA,EAAD,CAAiBzD,UAAU,oBAClC,kBAAC0D,EAAA,EAAD,CAAe3D,IAAKyD,EAASzD,IAAK4D,QAAS,IAAKC,WAAW,QACzD,6BAAS5D,UAAU,iBACjB,kBAAC,IAAD,KACI,6BACF,kBAAC,IAAD,CAAOQ,OAAK,EAACqD,KAAK,SAASC,UAAWR,IACtC,kBAAC,IAAD,CAAOO,KAAK,aAAaC,UAAWV,GACpC,kBAACJ,EAAD,OAEA,kBAAC,IAAD,CAAOxC,OAAK,EAACqD,KAAK,IAAIC,UAAWT,Y,SClB5BU,MApBf,WACE,IAAMC,EAAUC,cAIhB,OAHAD,EAAQE,QAAO,SAACV,EAASW,GACvBC,OAAOC,SAAS,EAAE,MAGlB,kBAACC,EAAA,EAAD,CAAgBC,aAAW,GACzB,yBAAKvE,UAAWM,IAAOyD,KACrB,kBAAC,IAAD,CAAQC,QAASA,GACf,kBAAC,EAAD,MAEA,yBAAKhE,UAAWM,IAAOkE,MACrB,kBAAC,EAAD,WCXQC,QACW,cAA7BL,OAAOZ,SAASkB,UAEe,UAA7BN,OAAOZ,SAASkB,UAEhBN,OAAOZ,SAASkB,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAA1C,GACLC,QAAQD,MAAMA,EAAM2C,a,mBExI5BtF,EAAOC,QAAU,CAAC,KAAO,kBAAkB,MAAQ,mBAAmB,UAAY,uBAAuB,aAAe,0BAA0B,IAAM,iBAAiB,KAAO,kBAAkB,OAAS,oBAAoB,WAAa,wBAAwB,WAAW,sBAAsB,WAAa,wBAAwB,iBAAmB,8BAA8B,aAAa,wBAAwB,WAAW,sBAAsB,OAAS,oBAAoB,IAAM,iBAAiB,gBAAgB,6B,+MCgB/fsF,EACU,eADVA,EAEU,eAEVC,EAAa,CACjB,CAAEjF,GAAI,IAAKkF,KAAM,eAAgBC,YAAa,QAG9C,CAAEnF,GAAI,uCAAwCkF,KAAM,eAAgBC,YAAa,WACjF,CACEnF,GAAI,4CACJkF,KAAM,eACNC,YAAa,aAGXC,EAAW,SAAC1E,GAAW,IAEvB2E,EADGC,EAA2B5E,EAA3B4E,KAAgB/D,GAAWb,EAArB6E,SAAqB7E,EAAXa,SASvB,OAPI+D,EAAKJ,OAASF,EAChBK,EAAU,kBAAC,IAAD,CAAM9D,QAASA,EAAQvB,GAAIsF,EAAKtF,IAAKsF,EAAKH,aAC3CG,EAAKJ,OAASF,IACvBK,EAAW,uBAAGG,KAAMF,EAAKtF,GAAIyF,OAAO,SAASC,IAAI,YAC9CJ,EAAKH,cAGH,uBAAQzE,EAAQ2E,IA+MlB,SAASM,EAAgBjF,GAC9B,IAAMkF,EAAiB,CACrBC,MAAM,EACNC,UAAU,EACVC,cAAeA,EACfC,iBAAkB,CAChBC,oBAAqB,mBAGnBC,EAAS,CACbC,OAAQ,yDACRC,OACE,6BACE,kBAAC,IAAD,CACEC,QAAST,EACT1F,OAAQ,GACRD,MAAO,GACPqG,UAAU,EACVC,WAAW,IAEb,0BAAMhH,UAAWM,IAAO2G,YAAxB,mBApB+B,EAwBG7F,mBAAS,UAxBZ,mBAwB9B8F,EAxB8B,KAwBhBC,EAxBgB,KAyBrC,OACM,kBAAC,IAAD,CACEC,GAAG,eACHC,MAAOV,EAAOO,GACdI,UAAW,MACXhF,QAAS,CAAEiF,QAASjH,IAAOiH,SAC3BC,WAAY,IACZC,WAAY,KACZ,kBAAC,IAAD,eACE1F,aAAW,YACX/B,UAAWM,IAAOoH,eAClBC,aAAc,WACZC,YAAW,WACTT,EAAgB,YACf,OAEDhG,EARN,CASEa,QAAS,SAAC6F,I,oCAGRC,CAAUD,GACVV,EAAgB,aAbpB,e,4CAsBV,WAAyBY,GAAzB,SAAAC,EAAA,0DACM/C,UAAUgD,UADhB,uBAEIF,EAAEG,iBAFN,SAKUjD,UAAUgD,UAAUE,UAAU,2BALxC,6E,sBAjPeC,IAhBQ,SAAC,GAAe,IAAdpG,EAAa,EAAbA,QACjBwB,EAAW6E,cAEjB,OACE,yBAAKC,MAAOhI,IAAO,oBACf,4BACA,kBAAC,IAAD,CAAOtB,MAAO,KAEX0G,EAAW/F,KAAI,SAACoG,EAAKlG,GACpB,OAAM,kBAACgG,EAAD,CAAUE,KAAMA,EAAM/D,QAASA,EAAQgE,SAAUxC,IAAauC,EAAKtF,c","file":"static/js/main.23c89894.chunk.js","sourcesContent":["import React from 'react';\nimport  { useTrail, useSpring, animated } from \"react-spring\";\n\n\n\nexport const  Trail = ({ children, delay=0, ...props }) =>{\n    const items = React.Children.toArray(children)\n    const trail = useTrail(items.length, {\n      trail:1000,\n      delay:delay,\n      from :{transform:'translate(-20px,0)', opacity:0}, opacity:1,transform:'translate(0px,0px)'\n    })\n    return (\n        <div>\n          {trail.map((spring, index) => (\n            <animated.div\n              key={index}\n              className=\"trails-text\"\n              style={spring}>\n              {items[index]}\n            </animated.div>\n          ))}\n        </div>\n    )\n  }","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appBar\":\"Header_appBar__1GnQ5\",\"toolBar\":\"Header_toolBar__lnpS-\",\"container\":\"Header_container__tSu5p\",\"list\":\"Header_list__1dgxl\",\"listItem\":\"Header_listItem__1Q5sg\",\"logo\":\"Header_logo__3C_B6\",\"menu\":\"Header_menu__1ovlq\",\"nav\":\"Header_nav__3OpeO\",\"menuItem\":\"Header_menuItem__2XNEC\",\"icons\":\"Header_icons__3VOM-\",\"tooltip\":\"Header_tooltip__31fJJ\",\"copiedText\":\"Header_copiedText__wTnbw\",\"fadeIn\":\"Header_fadeIn__3txIi\",\"buttonLabel\":\"Header_buttonLabel__1fXHC\",\"socialIcons\":\"Header_socialIcons__3nQ67\",\"overlayDrawer\":\"Header_overlayDrawer__3W9uK\",\"mobileDrawer\":\"Header_mobileDrawer__2WQOu\",\"overlay-content\":\"Header_overlay-content__3YnBC\",\"social\":\"Header_social__3tqu9\",\"listItemButton\":\"Header_listItemButton__2w7zb\"};","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M49.324 35.544H49.348L52.312 27.432H52.84L49.636 36H49.024L45.832 27.432H46.384L49.324 35.544ZM55.037 28.668V27.432H55.493V28.668H55.037ZM55.037 36V29.832H55.493V36H55.037ZM58.9607 33.948C58.9767 34.236 59.0407 34.492 59.1527 34.716C59.2647 34.932 59.4087 35.12 59.5847 35.28C59.7687 35.432 59.9807 35.548 60.2207 35.628C60.4607 35.708 60.7207 35.748 61.0007 35.748C61.2007 35.748 61.4127 35.732 61.6367 35.7C61.8687 35.66 62.0807 35.592 62.2727 35.496C62.4727 35.4 62.6367 35.268 62.7647 35.1C62.8927 34.924 62.9567 34.704 62.9567 34.44C62.9567 34.096 62.8527 33.836 62.6447 33.66C62.4367 33.484 62.1727 33.348 61.8527 33.252C61.5407 33.156 61.2007 33.08 60.8327 33.024C60.4727 32.96 60.1327 32.868 59.8127 32.748C59.5007 32.628 59.2407 32.46 59.0327 32.244C58.8247 32.02 58.7207 31.696 58.7207 31.272C58.7207 30.968 58.7887 30.716 58.9247 30.516C59.0607 30.308 59.2327 30.144 59.4407 30.024C59.6567 29.904 59.8967 29.82 60.1607 29.772C60.4247 29.716 60.6887 29.688 60.9527 29.688C61.2727 29.688 61.5727 29.724 61.8527 29.796C62.1327 29.868 62.3727 29.984 62.5727 30.144C62.7807 30.304 62.9407 30.508 63.0527 30.756C63.1727 31.004 63.2327 31.304 63.2327 31.656H62.7767C62.7767 31.376 62.7287 31.136 62.6327 30.936C62.5447 30.736 62.4167 30.576 62.2487 30.456C62.0887 30.328 61.8967 30.236 61.6727 30.18C61.4487 30.116 61.2087 30.084 60.9527 30.084C60.7447 30.084 60.5327 30.104 60.3167 30.144C60.1087 30.184 59.9207 30.252 59.7527 30.348C59.5847 30.444 59.4447 30.568 59.3327 30.72C59.2287 30.872 59.1767 31.056 59.1767 31.272C59.1767 31.52 59.2367 31.72 59.3567 31.872C59.4767 32.024 59.6327 32.148 59.8247 32.244C60.0247 32.332 60.2447 32.404 60.4847 32.46C60.7327 32.516 60.9807 32.572 61.2287 32.628C61.5327 32.684 61.8167 32.752 62.0807 32.832C62.3527 32.904 62.5847 33.008 62.7767 33.144C62.9767 33.272 63.1327 33.44 63.2447 33.648C63.3567 33.856 63.4127 34.12 63.4127 34.44C63.4127 34.776 63.3367 35.052 63.1847 35.268C63.0327 35.484 62.8407 35.66 62.6087 35.796C62.3767 35.924 62.1167 36.012 61.8287 36.06C61.5487 36.116 61.2727 36.144 61.0007 36.144C60.6487 36.144 60.3207 36.096 60.0167 36C59.7207 35.912 59.4607 35.776 59.2367 35.592C59.0127 35.4 58.8367 35.168 58.7087 34.896C58.5807 34.624 58.5127 34.308 58.5047 33.948H58.9607ZM71.206 36H70.75V34.68H70.726C70.646 34.912 70.53 35.12 70.378 35.304C70.234 35.48 70.062 35.632 69.862 35.76C69.67 35.888 69.458 35.984 69.226 36.048C68.994 36.112 68.758 36.144 68.518 36.144C68.158 36.144 67.85 36.1 67.594 36.012C67.346 35.924 67.142 35.808 66.982 35.664C66.822 35.52 66.694 35.36 66.598 35.184C66.51 35 66.446 34.816 66.406 34.632C66.366 34.448 66.342 34.272 66.334 34.104C66.326 33.928 66.322 33.776 66.322 33.648V29.832H66.778V33.732C66.778 33.892 66.79 34.088 66.814 34.32C66.838 34.544 66.906 34.764 67.018 34.98C67.138 35.188 67.314 35.368 67.546 35.52C67.778 35.672 68.106 35.748 68.53 35.748C68.874 35.748 69.182 35.684 69.454 35.556C69.734 35.428 69.97 35.252 70.162 35.028C70.354 34.796 70.498 34.524 70.594 34.212C70.698 33.892 70.75 33.544 70.75 33.168V29.832H71.206V36ZM78.4367 34.776H78.4127C78.3407 34.96 78.2367 35.136 78.1007 35.304C77.9647 35.464 77.7967 35.608 77.5967 35.736C77.4047 35.864 77.1847 35.964 76.9367 36.036C76.6887 36.108 76.4167 36.144 76.1207 36.144C75.4647 36.144 74.9567 36.004 74.5967 35.724C74.2367 35.436 74.0567 34.996 74.0567 34.404C74.0567 34.044 74.1287 33.752 74.2727 33.528C74.4167 33.296 74.5967 33.116 74.8127 32.988C75.0367 32.852 75.2807 32.756 75.5447 32.7C75.8167 32.644 76.0767 32.604 76.3247 32.58L77.0327 32.52C77.3607 32.496 77.6167 32.46 77.8007 32.412C77.9927 32.356 78.1367 32.284 78.2327 32.196C78.3287 32.1 78.3887 31.98 78.4127 31.836C78.4367 31.692 78.4487 31.512 78.4487 31.296C78.4487 31.128 78.4167 30.972 78.3527 30.828C78.2887 30.684 78.1887 30.556 78.0527 30.444C77.9167 30.332 77.7407 30.244 77.5247 30.18C77.3087 30.116 77.0447 30.084 76.7327 30.084C76.1807 30.084 75.7327 30.22 75.3887 30.492C75.0527 30.764 74.8687 31.176 74.8367 31.728H74.3807C74.4127 31.048 74.6287 30.54 75.0287 30.204C75.4367 29.86 76.0127 29.688 76.7567 29.688C77.5007 29.688 78.0407 29.836 78.3767 30.132C78.7207 30.42 78.8927 30.8 78.8927 31.272V34.86C78.8927 34.948 78.8927 35.036 78.8927 35.124C78.9007 35.212 78.9167 35.292 78.9407 35.364C78.9647 35.436 79.0047 35.496 79.0607 35.544C79.1167 35.584 79.1967 35.604 79.3007 35.604C79.3807 35.604 79.4927 35.592 79.6367 35.568V35.952C79.5167 35.984 79.3927 36 79.2647 36C79.0807 36 78.9327 35.976 78.8207 35.928C78.7167 35.88 78.6367 35.816 78.5807 35.736C78.5247 35.656 78.4847 35.564 78.4607 35.46C78.4447 35.348 78.4367 35.228 78.4367 35.1V34.776ZM78.4367 32.496C78.3247 32.632 78.1527 32.724 77.9207 32.772C77.6967 32.82 77.4447 32.856 77.1647 32.88L76.3967 32.952C76.1727 32.976 75.9487 33.012 75.7247 33.06C75.5007 33.1 75.2967 33.172 75.1127 33.276C74.9367 33.38 74.7927 33.524 74.6807 33.708C74.5687 33.884 74.5127 34.116 74.5127 34.404C74.5127 34.86 74.6567 35.2 74.9447 35.424C75.2327 35.64 75.6287 35.748 76.1327 35.748C76.6527 35.748 77.0647 35.656 77.3687 35.472C77.6727 35.28 77.9047 35.064 78.0647 34.824C78.2247 34.576 78.3247 34.34 78.3647 34.116C78.4127 33.884 78.4367 33.728 78.4367 33.648V32.496ZM82.7087 27.432V36H82.2527V27.432H82.7087ZM86.0683 28.668V27.432H86.5243V28.668H86.0683ZM86.0683 36V29.832H86.5243V36H86.0683ZM94.1079 35.604V36H89.2119V35.568L93.3519 30.228H89.5359V29.832H93.9159V30.264L89.7639 35.604H94.1079ZM100.777 34.776H100.753C100.681 34.96 100.577 35.136 100.441 35.304C100.305 35.464 100.137 35.608 99.9373 35.736C99.7453 35.864 99.5253 35.964 99.2773 36.036C99.0293 36.108 98.7573 36.144 98.4613 36.144C97.8053 36.144 97.2973 36.004 96.9373 35.724C96.5773 35.436 96.3973 34.996 96.3973 34.404C96.3973 34.044 96.4693 33.752 96.6133 33.528C96.7573 33.296 96.9373 33.116 97.1533 32.988C97.3773 32.852 97.6213 32.756 97.8853 32.7C98.1573 32.644 98.4173 32.604 98.6653 32.58L99.3733 32.52C99.7013 32.496 99.9573 32.46 100.141 32.412C100.333 32.356 100.477 32.284 100.573 32.196C100.669 32.1 100.729 31.98 100.753 31.836C100.777 31.692 100.789 31.512 100.789 31.296C100.789 31.128 100.757 30.972 100.693 30.828C100.629 30.684 100.529 30.556 100.393 30.444C100.257 30.332 100.081 30.244 99.8653 30.18C99.6493 30.116 99.3853 30.084 99.0733 30.084C98.5213 30.084 98.0733 30.22 97.7293 30.492C97.3933 30.764 97.2093 31.176 97.1773 31.728H96.7213C96.7533 31.048 96.9693 30.54 97.3693 30.204C97.7773 29.86 98.3533 29.688 99.0973 29.688C99.8413 29.688 100.381 29.836 100.717 30.132C101.061 30.42 101.233 30.8 101.233 31.272V34.86C101.233 34.948 101.233 35.036 101.233 35.124C101.241 35.212 101.257 35.292 101.281 35.364C101.305 35.436 101.345 35.496 101.401 35.544C101.457 35.584 101.537 35.604 101.641 35.604C101.721 35.604 101.833 35.592 101.977 35.568V35.952C101.857 35.984 101.733 36 101.605 36C101.421 36 101.273 35.976 101.161 35.928C101.057 35.88 100.977 35.816 100.921 35.736C100.865 35.656 100.825 35.564 100.801 35.46C100.785 35.348 100.777 35.228 100.777 35.1V34.776ZM100.777 32.496C100.665 32.632 100.493 32.724 100.261 32.772C100.037 32.82 99.7853 32.856 99.5053 32.88L98.7373 32.952C98.5133 32.976 98.2893 33.012 98.0653 33.06C97.8413 33.1 97.6373 33.172 97.4533 33.276C97.2773 33.38 97.1333 33.524 97.0213 33.708C96.9093 33.884 96.8533 34.116 96.8533 34.404C96.8533 34.86 96.9973 35.2 97.2853 35.424C97.5733 35.64 97.9693 35.748 98.4733 35.748C98.9933 35.748 99.4053 35.656 99.7093 35.472C100.013 35.28 100.245 35.064 100.405 34.824C100.565 34.576 100.665 34.34 100.705 34.116C100.753 33.884 100.777 33.728 100.777 33.648V32.496ZM106.753 30.228H105.409V34.536C105.409 34.784 105.437 34.98 105.493 35.124C105.549 35.268 105.633 35.38 105.745 35.46C105.865 35.532 106.005 35.576 106.165 35.592C106.333 35.608 106.525 35.612 106.741 35.604V36C106.509 36.016 106.281 36.016 106.057 36C105.841 35.976 105.649 35.916 105.481 35.82C105.313 35.716 105.177 35.564 105.073 35.364C104.977 35.164 104.937 34.888 104.953 34.536V30.228H103.813V29.832H104.953V27.912H105.409V29.832H106.753V30.228ZM109.499 28.668V27.432H109.955V28.668H109.499ZM109.499 36V29.832H109.955V36H109.499ZM112.918 32.916C112.918 32.476 112.978 32.064 113.098 31.68C113.226 31.288 113.41 30.944 113.65 30.648C113.89 30.352 114.186 30.12 114.538 29.952C114.89 29.776 115.294 29.688 115.75 29.688C116.206 29.688 116.61 29.776 116.962 29.952C117.314 30.12 117.61 30.352 117.85 30.648C118.09 30.944 118.27 31.288 118.39 31.68C118.518 32.064 118.582 32.476 118.582 32.916C118.582 33.356 118.518 33.772 118.39 34.164C118.27 34.556 118.09 34.9 117.85 35.196C117.61 35.484 117.314 35.716 116.962 35.892C116.61 36.06 116.206 36.144 115.75 36.144C115.294 36.144 114.89 36.06 114.538 35.892C114.186 35.716 113.89 35.484 113.65 35.196C113.41 34.9 113.226 34.556 113.098 34.164C112.978 33.772 112.918 33.356 112.918 32.916ZM113.374 32.916C113.374 33.284 113.426 33.64 113.53 33.984C113.634 34.32 113.786 34.62 113.986 34.884C114.186 35.148 114.434 35.36 114.73 35.52C115.026 35.672 115.366 35.748 115.75 35.748C116.134 35.748 116.474 35.672 116.77 35.52C117.066 35.36 117.314 35.148 117.514 34.884C117.714 34.62 117.866 34.32 117.97 33.984C118.074 33.64 118.126 33.284 118.126 32.916C118.126 32.548 118.074 32.196 117.97 31.86C117.866 31.516 117.714 31.212 117.514 30.948C117.314 30.684 117.066 30.476 116.77 30.324C116.474 30.164 116.134 30.084 115.75 30.084C115.366 30.084 115.026 30.164 114.73 30.324C114.434 30.476 114.186 30.684 113.986 30.948C113.786 31.212 113.634 31.516 113.53 31.86C113.426 32.196 113.374 32.548 113.374 32.916ZM121.452 29.832H121.908V31.152H121.932C122.012 30.92 122.124 30.716 122.268 30.54C122.42 30.356 122.592 30.2 122.784 30.072C122.984 29.944 123.2 29.848 123.432 29.784C123.664 29.72 123.9 29.688 124.14 29.688C124.5 29.688 124.804 29.732 125.052 29.82C125.308 29.908 125.516 30.024 125.676 30.168C125.836 30.312 125.96 30.476 126.048 30.66C126.144 30.836 126.212 31.016 126.252 31.2C126.292 31.384 126.316 31.564 126.324 31.74C126.332 31.908 126.336 32.056 126.336 32.184V36H125.88V32.1C125.88 31.948 125.868 31.756 125.844 31.524C125.82 31.292 125.748 31.072 125.628 30.864C125.516 30.648 125.34 30.464 125.1 30.312C124.868 30.16 124.544 30.084 124.128 30.084C123.776 30.084 123.464 30.148 123.192 30.276C122.92 30.404 122.688 30.584 122.496 30.816C122.304 31.04 122.156 31.312 122.052 31.632C121.956 31.944 121.908 32.288 121.908 32.664V36H121.452V29.832ZM134.698 27.432H140.458V27.888H135.226V31.32H140.146V31.776H135.226V35.544H140.518V36H134.698V27.432ZM143.129 29.832H143.585V31.152H143.609C143.689 30.92 143.801 30.716 143.945 30.54C144.097 30.356 144.269 30.2 144.461 30.072C144.661 29.944 144.877 29.848 145.109 29.784C145.341 29.72 145.577 29.688 145.817 29.688C146.177 29.688 146.481 29.732 146.729 29.82C146.985 29.908 147.193 30.024 147.353 30.168C147.513 30.312 147.637 30.476 147.725 30.66C147.821 30.836 147.889 31.016 147.929 31.2C147.969 31.384 147.993 31.564 148.001 31.74C148.009 31.908 148.013 32.056 148.013 32.184V36H147.557V32.1C147.557 31.948 147.545 31.756 147.521 31.524C147.497 31.292 147.425 31.072 147.305 30.864C147.193 30.648 147.017 30.464 146.777 30.312C146.545 30.16 146.221 30.084 145.805 30.084C145.453 30.084 145.141 30.148 144.869 30.276C144.597 30.404 144.365 30.584 144.173 30.816C143.981 31.04 143.833 31.312 143.729 31.632C143.633 31.944 143.585 32.288 143.585 32.664V36H143.129V29.832ZM156.252 29.832V35.676C156.252 36.02 156.212 36.352 156.132 36.672C156.052 37 155.912 37.288 155.712 37.536C155.52 37.784 155.252 37.98 154.908 38.124C154.564 38.276 154.128 38.352 153.6 38.352C153.272 38.352 152.964 38.316 152.676 38.244C152.388 38.18 152.136 38.072 151.92 37.92C151.704 37.776 151.528 37.58 151.392 37.332C151.264 37.092 151.192 36.792 151.176 36.432H151.632C151.656 36.704 151.724 36.936 151.836 37.128C151.948 37.32 152.092 37.476 152.268 37.596C152.452 37.724 152.656 37.816 152.88 37.872C153.104 37.928 153.344 37.956 153.6 37.956C154.024 37.956 154.376 37.892 154.656 37.764C154.944 37.636 155.172 37.468 155.34 37.26C155.508 37.06 155.624 36.828 155.688 36.564C155.76 36.308 155.796 36.048 155.796 35.784V34.368H155.772C155.556 34.824 155.26 35.172 154.884 35.412C154.516 35.652 154.068 35.772 153.54 35.772C153.084 35.772 152.688 35.696 152.352 35.544C152.024 35.384 151.748 35.168 151.524 34.896C151.308 34.616 151.144 34.292 151.032 33.924C150.928 33.556 150.876 33.156 150.876 32.724C150.876 32.316 150.932 31.928 151.044 31.56C151.164 31.192 151.336 30.872 151.56 30.6C151.784 30.32 152.06 30.1 152.388 29.94C152.724 29.772 153.108 29.688 153.54 29.688C154.028 29.688 154.476 29.812 154.884 30.06C155.3 30.308 155.596 30.66 155.772 31.116H155.796V29.832H156.252ZM153.54 30.084C153.164 30.084 152.836 30.16 152.556 30.312C152.284 30.464 152.056 30.664 151.872 30.912C151.696 31.16 151.56 31.444 151.464 31.764C151.376 32.076 151.332 32.396 151.332 32.724C151.332 33.084 151.376 33.428 151.464 33.756C151.56 34.076 151.7 34.356 151.884 34.596C152.076 34.836 152.308 35.028 152.58 35.172C152.86 35.308 153.18 35.376 153.54 35.376C153.916 35.376 154.244 35.304 154.524 35.16C154.804 35.016 155.036 34.82 155.22 34.572C155.412 34.324 155.552 34.044 155.64 33.732C155.736 33.412 155.784 33.076 155.784 32.724C155.784 32.38 155.736 32.048 155.64 31.728C155.552 31.408 155.412 31.128 155.22 30.888C155.036 30.64 154.804 30.444 154.524 30.3C154.244 30.156 153.916 30.084 153.54 30.084ZM159.505 28.668V27.432H159.961V28.668H159.505ZM159.505 36V29.832H159.961V36H159.505ZM163.213 29.832H163.669V31.152H163.693C163.773 30.92 163.885 30.716 164.029 30.54C164.181 30.356 164.353 30.2 164.545 30.072C164.745 29.944 164.961 29.848 165.193 29.784C165.425 29.72 165.661 29.688 165.901 29.688C166.261 29.688 166.565 29.732 166.813 29.82C167.069 29.908 167.277 30.024 167.437 30.168C167.597 30.312 167.721 30.476 167.809 30.66C167.905 30.836 167.973 31.016 168.013 31.2C168.053 31.384 168.077 31.564 168.085 31.74C168.093 31.908 168.097 32.056 168.097 32.184V36H167.641V32.1C167.641 31.948 167.629 31.756 167.605 31.524C167.581 31.292 167.509 31.072 167.389 30.864C167.277 30.648 167.101 30.464 166.861 30.312C166.629 30.16 166.305 30.084 165.889 30.084C165.537 30.084 165.225 30.148 164.953 30.276C164.681 30.404 164.449 30.584 164.257 30.816C164.065 31.04 163.917 31.312 163.813 31.632C163.717 31.944 163.669 32.288 163.669 32.664V36H163.213V29.832ZM171.415 32.976V33.048C171.415 33.408 171.463 33.752 171.559 34.08C171.655 34.408 171.795 34.696 171.979 34.944C172.171 35.192 172.407 35.388 172.687 35.532C172.975 35.676 173.307 35.748 173.683 35.748C174.299 35.748 174.787 35.588 175.147 35.268C175.507 34.94 175.755 34.488 175.891 33.912H176.347C176.211 34.632 175.915 35.184 175.459 35.568C175.011 35.952 174.415 36.144 173.671 36.144C173.215 36.144 172.815 36.064 172.471 35.904C172.135 35.736 171.851 35.512 171.619 35.232C171.395 34.944 171.227 34.608 171.115 34.224C171.003 33.832 170.947 33.412 170.947 32.964C170.947 32.532 171.003 32.12 171.115 31.728C171.235 31.328 171.411 30.98 171.643 30.684C171.875 30.38 172.163 30.14 172.507 29.964C172.859 29.78 173.271 29.688 173.743 29.688C174.175 29.688 174.555 29.768 174.883 29.928C175.219 30.088 175.499 30.308 175.723 30.588C175.947 30.86 176.115 31.18 176.227 31.548C176.347 31.908 176.407 32.296 176.407 32.712C176.407 32.752 176.403 32.8 176.395 32.856C176.395 32.904 176.395 32.944 176.395 32.976H171.415ZM175.939 32.58C175.923 32.244 175.867 31.928 175.771 31.632C175.675 31.328 175.531 31.064 175.339 30.84C175.155 30.608 174.927 30.424 174.655 30.288C174.391 30.152 174.087 30.084 173.743 30.084C173.375 30.084 173.051 30.156 172.771 30.3C172.491 30.436 172.255 30.62 172.063 30.852C171.871 31.076 171.723 31.34 171.619 31.644C171.515 31.948 171.451 32.26 171.427 32.58H175.939ZM179.438 32.976V33.048C179.438 33.408 179.486 33.752 179.582 34.08C179.678 34.408 179.818 34.696 180.002 34.944C180.194 35.192 180.43 35.388 180.71 35.532C180.998 35.676 181.33 35.748 181.706 35.748C182.322 35.748 182.81 35.588 183.17 35.268C183.53 34.94 183.778 34.488 183.914 33.912H184.37C184.234 34.632 183.938 35.184 183.482 35.568C183.034 35.952 182.438 36.144 181.694 36.144C181.238 36.144 180.838 36.064 180.494 35.904C180.158 35.736 179.874 35.512 179.642 35.232C179.418 34.944 179.25 34.608 179.138 34.224C179.026 33.832 178.97 33.412 178.97 32.964C178.97 32.532 179.026 32.12 179.138 31.728C179.258 31.328 179.434 30.98 179.666 30.684C179.898 30.38 180.186 30.14 180.53 29.964C180.882 29.78 181.294 29.688 181.766 29.688C182.198 29.688 182.578 29.768 182.906 29.928C183.242 30.088 183.522 30.308 183.746 30.588C183.97 30.86 184.138 31.18 184.25 31.548C184.37 31.908 184.43 32.296 184.43 32.712C184.43 32.752 184.426 32.8 184.418 32.856C184.418 32.904 184.418 32.944 184.418 32.976H179.438ZM183.962 32.58C183.946 32.244 183.89 31.928 183.794 31.632C183.698 31.328 183.554 31.064 183.362 30.84C183.178 30.608 182.95 30.424 182.678 30.288C182.414 30.152 182.11 30.084 181.766 30.084C181.398 30.084 181.074 30.156 180.794 30.3C180.514 30.436 180.278 30.62 180.086 30.852C179.894 31.076 179.746 31.34 179.642 31.644C179.538 31.948 179.474 32.26 179.45 32.58H183.962ZM187.737 31.2H187.773C187.829 31 187.929 30.812 188.073 30.636C188.225 30.46 188.405 30.308 188.613 30.18C188.829 30.052 189.065 29.956 189.321 29.892C189.585 29.82 189.857 29.788 190.137 29.796V30.252C189.897 30.22 189.621 30.244 189.309 30.324C189.005 30.404 188.713 30.58 188.433 30.852C188.321 30.972 188.221 31.088 188.133 31.2C188.053 31.312 187.985 31.436 187.929 31.572C187.873 31.708 187.829 31.86 187.797 32.028C187.765 32.196 187.745 32.396 187.737 32.628V36H187.281V29.832H187.737V31.2Z\",\n  fill: \"black\"\n});\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M48.6655 6.51074V16.375H51.5776C53.0679 16.375 54.1069 15.6401 54.6948 14.1704C55.0161 13.3638 55.1768 12.4033 55.1768 11.2891C55.1768 9.75098 54.9341 8.57178 54.4487 7.75146C53.9702 6.92432 53.0132 6.51074 51.5776 6.51074H48.6655ZM52.1108 3.88574C53.0474 3.89941 53.8267 4.00879 54.4487 4.21387C55.5083 4.5625 56.3662 5.20166 57.0225 6.13135C57.5488 6.8833 57.9077 7.69678 58.0991 8.57178C58.2905 9.44678 58.3862 10.2808 58.3862 11.0737C58.3862 13.0835 57.9829 14.7856 57.1763 16.1802C56.0825 18.0601 54.394 19 52.1108 19H45.5996V3.88574H52.1108ZM60.9907 21.1431L61.3599 21.1636C61.647 21.1772 61.9204 21.167 62.1802 21.1328C62.4399 21.0986 62.6587 21.02 62.8364 20.897C63.0073 20.7808 63.1646 20.5381 63.3081 20.1689C63.4585 19.7998 63.52 19.5742 63.4927 19.4922L59.3911 7.82324H62.6416L65.082 16.0674L67.3892 7.82324H70.4961L66.6611 18.8154C65.9229 20.9346 65.3384 22.2471 64.9077 22.7529C64.4771 23.2656 63.6157 23.522 62.3237 23.522C62.064 23.522 61.8555 23.5186 61.6982 23.5117C61.541 23.5117 61.3052 23.5015 60.9907 23.481V21.1431ZM75.2129 19H72.2905V3.88574H75.2129V19ZM84.2363 13.5654C84.0518 13.6816 83.8638 13.7773 83.6724 13.8525C83.4878 13.9209 83.2314 13.9858 82.9033 14.0474L82.2471 14.1704C81.6318 14.2798 81.1909 14.4131 80.9243 14.5703C80.4731 14.8369 80.2476 15.2505 80.2476 15.811C80.2476 16.3101 80.3843 16.6724 80.6577 16.8979C80.938 17.1167 81.2764 17.2261 81.6729 17.2261C82.3018 17.2261 82.8794 17.0415 83.4058 16.6724C83.939 16.3032 84.2158 15.6299 84.2363 14.6523V13.5654ZM82.4624 12.2017C83.0024 12.1333 83.3887 12.0479 83.6211 11.9453C84.0381 11.7676 84.2466 11.4907 84.2466 11.1147C84.2466 10.6567 84.0859 10.3423 83.7646 10.1714C83.4502 9.99365 82.9854 9.90479 82.3701 9.90479C81.6797 9.90479 81.1909 10.0757 80.9038 10.4175C80.6987 10.6704 80.562 11.0122 80.4937 11.4429H77.6738C77.7354 10.4653 78.0088 9.66211 78.4941 9.0332C79.2666 8.04883 80.5928 7.55664 82.4727 7.55664C83.6963 7.55664 84.7832 7.79932 85.7334 8.28467C86.6836 8.77002 87.1587 9.68604 87.1587 11.0327V16.1597C87.1587 16.5151 87.1655 16.9458 87.1792 17.4517C87.1997 17.8345 87.2578 18.0942 87.3535 18.231C87.4492 18.3677 87.5928 18.4805 87.7842 18.5693V19H84.6055C84.5166 18.7744 84.4551 18.5625 84.4209 18.3643C84.3867 18.166 84.3594 17.9404 84.3389 17.6875C83.9355 18.125 83.4707 18.4976 82.9443 18.8052C82.3154 19.1675 81.6045 19.3486 80.8115 19.3486C79.7998 19.3486 78.9624 19.0615 78.2993 18.4873C77.6431 17.9062 77.3149 17.0859 77.3149 16.0264C77.3149 14.6523 77.8447 13.6577 78.9043 13.0425C79.4854 12.7075 80.3398 12.4683 81.4678 12.3247L82.4624 12.2017ZM95.9565 7.55664C97.1118 7.55664 98.0552 7.86084 98.7866 8.46924C99.5249 9.0708 99.894 10.0723 99.894 11.4736V19H96.8999V12.2017C96.8999 11.6138 96.8213 11.1626 96.6641 10.8481C96.377 10.2739 95.8301 9.98682 95.0234 9.98682C94.0322 9.98682 93.3521 10.4072 92.9829 11.248C92.7915 11.6924 92.6958 12.2598 92.6958 12.9502V19H89.7837V7.84375H92.6035V9.47412C92.9795 8.8999 93.335 8.48633 93.6699 8.2334C94.2715 7.78223 95.0337 7.55664 95.9565 7.55664ZM110.743 3.88574L112.742 12.54L113.173 14.9497L113.614 12.5913L115.316 3.88574H118.648L120.443 12.54L120.904 14.9497L121.366 12.6323L123.386 3.88574H126.595L122.34 19H119.325L117.5 10.1611L116.967 7.23877L116.434 10.1611L114.608 19H111.676L107.39 3.88574H110.743ZM132.922 16.939C133.776 16.939 134.433 16.6348 134.891 16.0264C135.349 15.418 135.578 14.5532 135.578 13.4321C135.578 12.311 135.349 11.4497 134.891 10.8481C134.433 10.2397 133.776 9.93555 132.922 9.93555C132.067 9.93555 131.408 10.2397 130.943 10.8481C130.485 11.4497 130.256 12.311 130.256 13.4321C130.256 14.5532 130.485 15.418 130.943 16.0264C131.408 16.6348 132.067 16.939 132.922 16.939ZM138.644 13.4321C138.644 15.0728 138.172 16.4775 137.229 17.6465C136.285 18.8086 134.853 19.3896 132.932 19.3896C131.011 19.3896 129.579 18.8086 128.636 17.6465C127.692 16.4775 127.221 15.0728 127.221 13.4321C127.221 11.8188 127.692 10.4209 128.636 9.23828C129.579 8.05566 131.011 7.46436 132.932 7.46436C134.853 7.46436 136.285 8.05566 137.229 9.23828C138.172 10.4209 138.644 11.8188 138.644 13.4321ZM145.76 16.939C146.614 16.939 147.271 16.6348 147.729 16.0264C148.187 15.418 148.416 14.5532 148.416 13.4321C148.416 12.311 148.187 11.4497 147.729 10.8481C147.271 10.2397 146.614 9.93555 145.76 9.93555C144.905 9.93555 144.246 10.2397 143.781 10.8481C143.323 11.4497 143.094 12.311 143.094 13.4321C143.094 14.5532 143.323 15.418 143.781 16.0264C144.246 16.6348 144.905 16.939 145.76 16.939ZM151.481 13.4321C151.481 15.0728 151.01 16.4775 150.066 17.6465C149.123 18.8086 147.691 19.3896 145.77 19.3896C143.849 19.3896 142.417 18.8086 141.474 17.6465C140.53 16.4775 140.059 15.0728 140.059 13.4321C140.059 11.8188 140.53 10.4209 141.474 9.23828C142.417 8.05566 143.849 7.46436 145.77 7.46436C147.691 7.46436 149.123 8.05566 150.066 9.23828C151.01 10.4209 151.481 11.8188 151.481 13.4321ZM152.435 10.0073V7.92578H153.994V4.80859H156.885V7.92578H158.7V10.0073H156.885V15.9136C156.885 16.3716 156.943 16.6587 157.06 16.7749C157.176 16.8843 157.531 16.939 158.126 16.939C158.215 16.939 158.307 16.939 158.403 16.939C158.505 16.9321 158.604 16.9253 158.7 16.9185V19.1025L157.316 19.1538C155.935 19.2017 154.992 18.9624 154.486 18.436C154.158 18.1011 153.994 17.585 153.994 16.8877V10.0073H152.435ZM159.428 10.0073V7.92578H160.987V4.80859H163.878V7.92578H165.693V10.0073H163.878V15.9136C163.878 16.3716 163.937 16.6587 164.053 16.7749C164.169 16.8843 164.524 16.939 165.119 16.939C165.208 16.939 165.3 16.939 165.396 16.939C165.499 16.9321 165.598 16.9253 165.693 16.9185V19.1025L164.309 19.1538C162.928 19.2017 161.985 18.9624 161.479 18.436C161.151 18.1011 160.987 17.585 160.987 16.8877V10.0073H159.428ZM172.584 16.939C173.438 16.939 174.095 16.6348 174.553 16.0264C175.011 15.418 175.24 14.5532 175.24 13.4321C175.24 12.311 175.011 11.4497 174.553 10.8481C174.095 10.2397 173.438 9.93555 172.584 9.93555C171.729 9.93555 171.07 10.2397 170.605 10.8481C170.147 11.4497 169.918 12.311 169.918 13.4321C169.918 14.5532 170.147 15.418 170.605 16.0264C171.07 16.6348 171.729 16.939 172.584 16.939ZM178.306 13.4321C178.306 15.0728 177.834 16.4775 176.891 17.6465C175.947 18.8086 174.515 19.3896 172.594 19.3896C170.673 19.3896 169.241 18.8086 168.298 17.6465C167.354 16.4775 166.883 15.0728 166.883 13.4321C166.883 11.8188 167.354 10.4209 168.298 9.23828C169.241 8.05566 170.673 7.46436 172.594 7.46436C174.515 7.46436 175.947 8.05566 176.891 9.23828C177.834 10.4209 178.306 11.8188 178.306 13.4321ZM186.601 7.55664C187.756 7.55664 188.7 7.86084 189.431 8.46924C190.169 9.0708 190.539 10.0723 190.539 11.4736V19H187.544V12.2017C187.544 11.6138 187.466 11.1626 187.309 10.8481C187.021 10.2739 186.475 9.98682 185.668 9.98682C184.677 9.98682 183.997 10.4072 183.627 11.248C183.436 11.6924 183.34 12.2598 183.34 12.9502V19H180.428V7.84375H183.248V9.47412C183.624 8.8999 183.979 8.48633 184.314 8.2334C184.916 7.78223 185.678 7.55664 186.601 7.55664Z\",\n  fill: \"#2A2A2A\"\n});\n\nvar _ref4 = /*#__PURE__*/React.createElement(\"rect\", {\n  className: \"logoIcon\",\n  y: 3,\n  width: 7,\n  height: 33,\n  fill: \"#2B2B2B\"\n});\n\nvar _ref5 = /*#__PURE__*/React.createElement(\"rect\", {\n  className: \"logoIcon\",\n  y: 30,\n  x: 7.5,\n  width: 7,\n  height: 6,\n  fill: \"#2B2B2B\"\n});\n\nvar _ref6 = /*#__PURE__*/React.createElement(\"rect\", {\n  className: \"logoIcon\",\n  y: 16,\n  x: 15,\n  width: 7,\n  height: 20,\n  fill: \"#2B2B2B\"\n});\n\nvar _ref7 = /*#__PURE__*/React.createElement(\"rect\", {\n  className: \"logoIcon\",\n  y: 30,\n  x: 22.5,\n  width: 7,\n  height: 6,\n  fill: \"#2B2B2B\"\n});\n\nvar _ref8 = /*#__PURE__*/React.createElement(\"rect\", {\n  className: \"logoIcon\",\n  y: 3,\n  x: 30,\n  width: 7,\n  height: 33,\n  fill: \"#2B2B2B\"\n});\n\nvar SvgLogo = function SvgLogo(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 193,\n    height: 43,\n    viewBox: \"0 0 193 43\",\n    fill: \"none\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2, _ref3, _ref4, _ref5, _ref6, _ref7, _ref8);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgLogo, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/Logo.8393c897.svg\";\nexport { ForwardRef as ReactComponent };","import React from \"react\";\nimport { ReactComponent as logoSVG } from \"../../../Assets/Logo.svg\";\nimport styles from \"./Header.module.scss\";\nimport {NavLink} from \"react-router-dom\";\n\nconst Logo = ({color='#020F03'}) => {\n  return (\n    <div className={styles.logo}>\n      <NavLink exact to={\"/\"}>\n        <svg\n          width='193'\n          height='43'\n          viewBox='0 0 193 43'\n          fill='none'\n          xmlns='http://www.w3.org/2000/svg'>\n          <path\n            d='M49.324 35.544H49.348L52.312 27.432H52.84L49.636 36H49.024L45.832 27.432H46.384L49.324 35.544ZM55.037 28.668V27.432H55.493V28.668H55.037ZM55.037 36V29.832H55.493V36H55.037ZM58.9607 33.948C58.9767 34.236 59.0407 34.492 59.1527 34.716C59.2647 34.932 59.4087 35.12 59.5847 35.28C59.7687 35.432 59.9807 35.548 60.2207 35.628C60.4607 35.708 60.7207 35.748 61.0007 35.748C61.2007 35.748 61.4127 35.732 61.6367 35.7C61.8687 35.66 62.0807 35.592 62.2727 35.496C62.4727 35.4 62.6367 35.268 62.7647 35.1C62.8927 34.924 62.9567 34.704 62.9567 34.44C62.9567 34.096 62.8527 33.836 62.6447 33.66C62.4367 33.484 62.1727 33.348 61.8527 33.252C61.5407 33.156 61.2007 33.08 60.8327 33.024C60.4727 32.96 60.1327 32.868 59.8127 32.748C59.5007 32.628 59.2407 32.46 59.0327 32.244C58.8247 32.02 58.7207 31.696 58.7207 31.272C58.7207 30.968 58.7887 30.716 58.9247 30.516C59.0607 30.308 59.2327 30.144 59.4407 30.024C59.6567 29.904 59.8967 29.82 60.1607 29.772C60.4247 29.716 60.6887 29.688 60.9527 29.688C61.2727 29.688 61.5727 29.724 61.8527 29.796C62.1327 29.868 62.3727 29.984 62.5727 30.144C62.7807 30.304 62.9407 30.508 63.0527 30.756C63.1727 31.004 63.2327 31.304 63.2327 31.656H62.7767C62.7767 31.376 62.7287 31.136 62.6327 30.936C62.5447 30.736 62.4167 30.576 62.2487 30.456C62.0887 30.328 61.8967 30.236 61.6727 30.18C61.4487 30.116 61.2087 30.084 60.9527 30.084C60.7447 30.084 60.5327 30.104 60.3167 30.144C60.1087 30.184 59.9207 30.252 59.7527 30.348C59.5847 30.444 59.4447 30.568 59.3327 30.72C59.2287 30.872 59.1767 31.056 59.1767 31.272C59.1767 31.52 59.2367 31.72 59.3567 31.872C59.4767 32.024 59.6327 32.148 59.8247 32.244C60.0247 32.332 60.2447 32.404 60.4847 32.46C60.7327 32.516 60.9807 32.572 61.2287 32.628C61.5327 32.684 61.8167 32.752 62.0807 32.832C62.3527 32.904 62.5847 33.008 62.7767 33.144C62.9767 33.272 63.1327 33.44 63.2447 33.648C63.3567 33.856 63.4127 34.12 63.4127 34.44C63.4127 34.776 63.3367 35.052 63.1847 35.268C63.0327 35.484 62.8407 35.66 62.6087 35.796C62.3767 35.924 62.1167 36.012 61.8287 36.06C61.5487 36.116 61.2727 36.144 61.0007 36.144C60.6487 36.144 60.3207 36.096 60.0167 36C59.7207 35.912 59.4607 35.776 59.2367 35.592C59.0127 35.4 58.8367 35.168 58.7087 34.896C58.5807 34.624 58.5127 34.308 58.5047 33.948H58.9607ZM71.206 36H70.75V34.68H70.726C70.646 34.912 70.53 35.12 70.378 35.304C70.234 35.48 70.062 35.632 69.862 35.76C69.67 35.888 69.458 35.984 69.226 36.048C68.994 36.112 68.758 36.144 68.518 36.144C68.158 36.144 67.85 36.1 67.594 36.012C67.346 35.924 67.142 35.808 66.982 35.664C66.822 35.52 66.694 35.36 66.598 35.184C66.51 35 66.446 34.816 66.406 34.632C66.366 34.448 66.342 34.272 66.334 34.104C66.326 33.928 66.322 33.776 66.322 33.648V29.832H66.778V33.732C66.778 33.892 66.79 34.088 66.814 34.32C66.838 34.544 66.906 34.764 67.018 34.98C67.138 35.188 67.314 35.368 67.546 35.52C67.778 35.672 68.106 35.748 68.53 35.748C68.874 35.748 69.182 35.684 69.454 35.556C69.734 35.428 69.97 35.252 70.162 35.028C70.354 34.796 70.498 34.524 70.594 34.212C70.698 33.892 70.75 33.544 70.75 33.168V29.832H71.206V36ZM78.4367 34.776H78.4127C78.3407 34.96 78.2367 35.136 78.1007 35.304C77.9647 35.464 77.7967 35.608 77.5967 35.736C77.4047 35.864 77.1847 35.964 76.9367 36.036C76.6887 36.108 76.4167 36.144 76.1207 36.144C75.4647 36.144 74.9567 36.004 74.5967 35.724C74.2367 35.436 74.0567 34.996 74.0567 34.404C74.0567 34.044 74.1287 33.752 74.2727 33.528C74.4167 33.296 74.5967 33.116 74.8127 32.988C75.0367 32.852 75.2807 32.756 75.5447 32.7C75.8167 32.644 76.0767 32.604 76.3247 32.58L77.0327 32.52C77.3607 32.496 77.6167 32.46 77.8007 32.412C77.9927 32.356 78.1367 32.284 78.2327 32.196C78.3287 32.1 78.3887 31.98 78.4127 31.836C78.4367 31.692 78.4487 31.512 78.4487 31.296C78.4487 31.128 78.4167 30.972 78.3527 30.828C78.2887 30.684 78.1887 30.556 78.0527 30.444C77.9167 30.332 77.7407 30.244 77.5247 30.18C77.3087 30.116 77.0447 30.084 76.7327 30.084C76.1807 30.084 75.7327 30.22 75.3887 30.492C75.0527 30.764 74.8687 31.176 74.8367 31.728H74.3807C74.4127 31.048 74.6287 30.54 75.0287 30.204C75.4367 29.86 76.0127 29.688 76.7567 29.688C77.5007 29.688 78.0407 29.836 78.3767 30.132C78.7207 30.42 78.8927 30.8 78.8927 31.272V34.86C78.8927 34.948 78.8927 35.036 78.8927 35.124C78.9007 35.212 78.9167 35.292 78.9407 35.364C78.9647 35.436 79.0047 35.496 79.0607 35.544C79.1167 35.584 79.1967 35.604 79.3007 35.604C79.3807 35.604 79.4927 35.592 79.6367 35.568V35.952C79.5167 35.984 79.3927 36 79.2647 36C79.0807 36 78.9327 35.976 78.8207 35.928C78.7167 35.88 78.6367 35.816 78.5807 35.736C78.5247 35.656 78.4847 35.564 78.4607 35.46C78.4447 35.348 78.4367 35.228 78.4367 35.1V34.776ZM78.4367 32.496C78.3247 32.632 78.1527 32.724 77.9207 32.772C77.6967 32.82 77.4447 32.856 77.1647 32.88L76.3967 32.952C76.1727 32.976 75.9487 33.012 75.7247 33.06C75.5007 33.1 75.2967 33.172 75.1127 33.276C74.9367 33.38 74.7927 33.524 74.6807 33.708C74.5687 33.884 74.5127 34.116 74.5127 34.404C74.5127 34.86 74.6567 35.2 74.9447 35.424C75.2327 35.64 75.6287 35.748 76.1327 35.748C76.6527 35.748 77.0647 35.656 77.3687 35.472C77.6727 35.28 77.9047 35.064 78.0647 34.824C78.2247 34.576 78.3247 34.34 78.3647 34.116C78.4127 33.884 78.4367 33.728 78.4367 33.648V32.496ZM82.7087 27.432V36H82.2527V27.432H82.7087ZM86.0683 28.668V27.432H86.5243V28.668H86.0683ZM86.0683 36V29.832H86.5243V36H86.0683ZM94.1079 35.604V36H89.2119V35.568L93.3519 30.228H89.5359V29.832H93.9159V30.264L89.7639 35.604H94.1079ZM100.777 34.776H100.753C100.681 34.96 100.577 35.136 100.441 35.304C100.305 35.464 100.137 35.608 99.9373 35.736C99.7453 35.864 99.5253 35.964 99.2773 36.036C99.0293 36.108 98.7573 36.144 98.4613 36.144C97.8053 36.144 97.2973 36.004 96.9373 35.724C96.5773 35.436 96.3973 34.996 96.3973 34.404C96.3973 34.044 96.4693 33.752 96.6133 33.528C96.7573 33.296 96.9373 33.116 97.1533 32.988C97.3773 32.852 97.6213 32.756 97.8853 32.7C98.1573 32.644 98.4173 32.604 98.6653 32.58L99.3733 32.52C99.7013 32.496 99.9573 32.46 100.141 32.412C100.333 32.356 100.477 32.284 100.573 32.196C100.669 32.1 100.729 31.98 100.753 31.836C100.777 31.692 100.789 31.512 100.789 31.296C100.789 31.128 100.757 30.972 100.693 30.828C100.629 30.684 100.529 30.556 100.393 30.444C100.257 30.332 100.081 30.244 99.8653 30.18C99.6493 30.116 99.3853 30.084 99.0733 30.084C98.5213 30.084 98.0733 30.22 97.7293 30.492C97.3933 30.764 97.2093 31.176 97.1773 31.728H96.7213C96.7533 31.048 96.9693 30.54 97.3693 30.204C97.7773 29.86 98.3533 29.688 99.0973 29.688C99.8413 29.688 100.381 29.836 100.717 30.132C101.061 30.42 101.233 30.8 101.233 31.272V34.86C101.233 34.948 101.233 35.036 101.233 35.124C101.241 35.212 101.257 35.292 101.281 35.364C101.305 35.436 101.345 35.496 101.401 35.544C101.457 35.584 101.537 35.604 101.641 35.604C101.721 35.604 101.833 35.592 101.977 35.568V35.952C101.857 35.984 101.733 36 101.605 36C101.421 36 101.273 35.976 101.161 35.928C101.057 35.88 100.977 35.816 100.921 35.736C100.865 35.656 100.825 35.564 100.801 35.46C100.785 35.348 100.777 35.228 100.777 35.1V34.776ZM100.777 32.496C100.665 32.632 100.493 32.724 100.261 32.772C100.037 32.82 99.7853 32.856 99.5053 32.88L98.7373 32.952C98.5133 32.976 98.2893 33.012 98.0653 33.06C97.8413 33.1 97.6373 33.172 97.4533 33.276C97.2773 33.38 97.1333 33.524 97.0213 33.708C96.9093 33.884 96.8533 34.116 96.8533 34.404C96.8533 34.86 96.9973 35.2 97.2853 35.424C97.5733 35.64 97.9693 35.748 98.4733 35.748C98.9933 35.748 99.4053 35.656 99.7093 35.472C100.013 35.28 100.245 35.064 100.405 34.824C100.565 34.576 100.665 34.34 100.705 34.116C100.753 33.884 100.777 33.728 100.777 33.648V32.496ZM106.753 30.228H105.409V34.536C105.409 34.784 105.437 34.98 105.493 35.124C105.549 35.268 105.633 35.38 105.745 35.46C105.865 35.532 106.005 35.576 106.165 35.592C106.333 35.608 106.525 35.612 106.741 35.604V36C106.509 36.016 106.281 36.016 106.057 36C105.841 35.976 105.649 35.916 105.481 35.82C105.313 35.716 105.177 35.564 105.073 35.364C104.977 35.164 104.937 34.888 104.953 34.536V30.228H103.813V29.832H104.953V27.912H105.409V29.832H106.753V30.228ZM109.499 28.668V27.432H109.955V28.668H109.499ZM109.499 36V29.832H109.955V36H109.499ZM112.918 32.916C112.918 32.476 112.978 32.064 113.098 31.68C113.226 31.288 113.41 30.944 113.65 30.648C113.89 30.352 114.186 30.12 114.538 29.952C114.89 29.776 115.294 29.688 115.75 29.688C116.206 29.688 116.61 29.776 116.962 29.952C117.314 30.12 117.61 30.352 117.85 30.648C118.09 30.944 118.27 31.288 118.39 31.68C118.518 32.064 118.582 32.476 118.582 32.916C118.582 33.356 118.518 33.772 118.39 34.164C118.27 34.556 118.09 34.9 117.85 35.196C117.61 35.484 117.314 35.716 116.962 35.892C116.61 36.06 116.206 36.144 115.75 36.144C115.294 36.144 114.89 36.06 114.538 35.892C114.186 35.716 113.89 35.484 113.65 35.196C113.41 34.9 113.226 34.556 113.098 34.164C112.978 33.772 112.918 33.356 112.918 32.916ZM113.374 32.916C113.374 33.284 113.426 33.64 113.53 33.984C113.634 34.32 113.786 34.62 113.986 34.884C114.186 35.148 114.434 35.36 114.73 35.52C115.026 35.672 115.366 35.748 115.75 35.748C116.134 35.748 116.474 35.672 116.77 35.52C117.066 35.36 117.314 35.148 117.514 34.884C117.714 34.62 117.866 34.32 117.97 33.984C118.074 33.64 118.126 33.284 118.126 32.916C118.126 32.548 118.074 32.196 117.97 31.86C117.866 31.516 117.714 31.212 117.514 30.948C117.314 30.684 117.066 30.476 116.77 30.324C116.474 30.164 116.134 30.084 115.75 30.084C115.366 30.084 115.026 30.164 114.73 30.324C114.434 30.476 114.186 30.684 113.986 30.948C113.786 31.212 113.634 31.516 113.53 31.86C113.426 32.196 113.374 32.548 113.374 32.916ZM121.452 29.832H121.908V31.152H121.932C122.012 30.92 122.124 30.716 122.268 30.54C122.42 30.356 122.592 30.2 122.784 30.072C122.984 29.944 123.2 29.848 123.432 29.784C123.664 29.72 123.9 29.688 124.14 29.688C124.5 29.688 124.804 29.732 125.052 29.82C125.308 29.908 125.516 30.024 125.676 30.168C125.836 30.312 125.96 30.476 126.048 30.66C126.144 30.836 126.212 31.016 126.252 31.2C126.292 31.384 126.316 31.564 126.324 31.74C126.332 31.908 126.336 32.056 126.336 32.184V36H125.88V32.1C125.88 31.948 125.868 31.756 125.844 31.524C125.82 31.292 125.748 31.072 125.628 30.864C125.516 30.648 125.34 30.464 125.1 30.312C124.868 30.16 124.544 30.084 124.128 30.084C123.776 30.084 123.464 30.148 123.192 30.276C122.92 30.404 122.688 30.584 122.496 30.816C122.304 31.04 122.156 31.312 122.052 31.632C121.956 31.944 121.908 32.288 121.908 32.664V36H121.452V29.832ZM134.698 27.432H140.458V27.888H135.226V31.32H140.146V31.776H135.226V35.544H140.518V36H134.698V27.432ZM143.129 29.832H143.585V31.152H143.609C143.689 30.92 143.801 30.716 143.945 30.54C144.097 30.356 144.269 30.2 144.461 30.072C144.661 29.944 144.877 29.848 145.109 29.784C145.341 29.72 145.577 29.688 145.817 29.688C146.177 29.688 146.481 29.732 146.729 29.82C146.985 29.908 147.193 30.024 147.353 30.168C147.513 30.312 147.637 30.476 147.725 30.66C147.821 30.836 147.889 31.016 147.929 31.2C147.969 31.384 147.993 31.564 148.001 31.74C148.009 31.908 148.013 32.056 148.013 32.184V36H147.557V32.1C147.557 31.948 147.545 31.756 147.521 31.524C147.497 31.292 147.425 31.072 147.305 30.864C147.193 30.648 147.017 30.464 146.777 30.312C146.545 30.16 146.221 30.084 145.805 30.084C145.453 30.084 145.141 30.148 144.869 30.276C144.597 30.404 144.365 30.584 144.173 30.816C143.981 31.04 143.833 31.312 143.729 31.632C143.633 31.944 143.585 32.288 143.585 32.664V36H143.129V29.832ZM156.252 29.832V35.676C156.252 36.02 156.212 36.352 156.132 36.672C156.052 37 155.912 37.288 155.712 37.536C155.52 37.784 155.252 37.98 154.908 38.124C154.564 38.276 154.128 38.352 153.6 38.352C153.272 38.352 152.964 38.316 152.676 38.244C152.388 38.18 152.136 38.072 151.92 37.92C151.704 37.776 151.528 37.58 151.392 37.332C151.264 37.092 151.192 36.792 151.176 36.432H151.632C151.656 36.704 151.724 36.936 151.836 37.128C151.948 37.32 152.092 37.476 152.268 37.596C152.452 37.724 152.656 37.816 152.88 37.872C153.104 37.928 153.344 37.956 153.6 37.956C154.024 37.956 154.376 37.892 154.656 37.764C154.944 37.636 155.172 37.468 155.34 37.26C155.508 37.06 155.624 36.828 155.688 36.564C155.76 36.308 155.796 36.048 155.796 35.784V34.368H155.772C155.556 34.824 155.26 35.172 154.884 35.412C154.516 35.652 154.068 35.772 153.54 35.772C153.084 35.772 152.688 35.696 152.352 35.544C152.024 35.384 151.748 35.168 151.524 34.896C151.308 34.616 151.144 34.292 151.032 33.924C150.928 33.556 150.876 33.156 150.876 32.724C150.876 32.316 150.932 31.928 151.044 31.56C151.164 31.192 151.336 30.872 151.56 30.6C151.784 30.32 152.06 30.1 152.388 29.94C152.724 29.772 153.108 29.688 153.54 29.688C154.028 29.688 154.476 29.812 154.884 30.06C155.3 30.308 155.596 30.66 155.772 31.116H155.796V29.832H156.252ZM153.54 30.084C153.164 30.084 152.836 30.16 152.556 30.312C152.284 30.464 152.056 30.664 151.872 30.912C151.696 31.16 151.56 31.444 151.464 31.764C151.376 32.076 151.332 32.396 151.332 32.724C151.332 33.084 151.376 33.428 151.464 33.756C151.56 34.076 151.7 34.356 151.884 34.596C152.076 34.836 152.308 35.028 152.58 35.172C152.86 35.308 153.18 35.376 153.54 35.376C153.916 35.376 154.244 35.304 154.524 35.16C154.804 35.016 155.036 34.82 155.22 34.572C155.412 34.324 155.552 34.044 155.64 33.732C155.736 33.412 155.784 33.076 155.784 32.724C155.784 32.38 155.736 32.048 155.64 31.728C155.552 31.408 155.412 31.128 155.22 30.888C155.036 30.64 154.804 30.444 154.524 30.3C154.244 30.156 153.916 30.084 153.54 30.084ZM159.505 28.668V27.432H159.961V28.668H159.505ZM159.505 36V29.832H159.961V36H159.505ZM163.213 29.832H163.669V31.152H163.693C163.773 30.92 163.885 30.716 164.029 30.54C164.181 30.356 164.353 30.2 164.545 30.072C164.745 29.944 164.961 29.848 165.193 29.784C165.425 29.72 165.661 29.688 165.901 29.688C166.261 29.688 166.565 29.732 166.813 29.82C167.069 29.908 167.277 30.024 167.437 30.168C167.597 30.312 167.721 30.476 167.809 30.66C167.905 30.836 167.973 31.016 168.013 31.2C168.053 31.384 168.077 31.564 168.085 31.74C168.093 31.908 168.097 32.056 168.097 32.184V36H167.641V32.1C167.641 31.948 167.629 31.756 167.605 31.524C167.581 31.292 167.509 31.072 167.389 30.864C167.277 30.648 167.101 30.464 166.861 30.312C166.629 30.16 166.305 30.084 165.889 30.084C165.537 30.084 165.225 30.148 164.953 30.276C164.681 30.404 164.449 30.584 164.257 30.816C164.065 31.04 163.917 31.312 163.813 31.632C163.717 31.944 163.669 32.288 163.669 32.664V36H163.213V29.832ZM171.415 32.976V33.048C171.415 33.408 171.463 33.752 171.559 34.08C171.655 34.408 171.795 34.696 171.979 34.944C172.171 35.192 172.407 35.388 172.687 35.532C172.975 35.676 173.307 35.748 173.683 35.748C174.299 35.748 174.787 35.588 175.147 35.268C175.507 34.94 175.755 34.488 175.891 33.912H176.347C176.211 34.632 175.915 35.184 175.459 35.568C175.011 35.952 174.415 36.144 173.671 36.144C173.215 36.144 172.815 36.064 172.471 35.904C172.135 35.736 171.851 35.512 171.619 35.232C171.395 34.944 171.227 34.608 171.115 34.224C171.003 33.832 170.947 33.412 170.947 32.964C170.947 32.532 171.003 32.12 171.115 31.728C171.235 31.328 171.411 30.98 171.643 30.684C171.875 30.38 172.163 30.14 172.507 29.964C172.859 29.78 173.271 29.688 173.743 29.688C174.175 29.688 174.555 29.768 174.883 29.928C175.219 30.088 175.499 30.308 175.723 30.588C175.947 30.86 176.115 31.18 176.227 31.548C176.347 31.908 176.407 32.296 176.407 32.712C176.407 32.752 176.403 32.8 176.395 32.856C176.395 32.904 176.395 32.944 176.395 32.976H171.415ZM175.939 32.58C175.923 32.244 175.867 31.928 175.771 31.632C175.675 31.328 175.531 31.064 175.339 30.84C175.155 30.608 174.927 30.424 174.655 30.288C174.391 30.152 174.087 30.084 173.743 30.084C173.375 30.084 173.051 30.156 172.771 30.3C172.491 30.436 172.255 30.62 172.063 30.852C171.871 31.076 171.723 31.34 171.619 31.644C171.515 31.948 171.451 32.26 171.427 32.58H175.939ZM179.438 32.976V33.048C179.438 33.408 179.486 33.752 179.582 34.08C179.678 34.408 179.818 34.696 180.002 34.944C180.194 35.192 180.43 35.388 180.71 35.532C180.998 35.676 181.33 35.748 181.706 35.748C182.322 35.748 182.81 35.588 183.17 35.268C183.53 34.94 183.778 34.488 183.914 33.912H184.37C184.234 34.632 183.938 35.184 183.482 35.568C183.034 35.952 182.438 36.144 181.694 36.144C181.238 36.144 180.838 36.064 180.494 35.904C180.158 35.736 179.874 35.512 179.642 35.232C179.418 34.944 179.25 34.608 179.138 34.224C179.026 33.832 178.97 33.412 178.97 32.964C178.97 32.532 179.026 32.12 179.138 31.728C179.258 31.328 179.434 30.98 179.666 30.684C179.898 30.38 180.186 30.14 180.53 29.964C180.882 29.78 181.294 29.688 181.766 29.688C182.198 29.688 182.578 29.768 182.906 29.928C183.242 30.088 183.522 30.308 183.746 30.588C183.97 30.86 184.138 31.18 184.25 31.548C184.37 31.908 184.43 32.296 184.43 32.712C184.43 32.752 184.426 32.8 184.418 32.856C184.418 32.904 184.418 32.944 184.418 32.976H179.438ZM183.962 32.58C183.946 32.244 183.89 31.928 183.794 31.632C183.698 31.328 183.554 31.064 183.362 30.84C183.178 30.608 182.95 30.424 182.678 30.288C182.414 30.152 182.11 30.084 181.766 30.084C181.398 30.084 181.074 30.156 180.794 30.3C180.514 30.436 180.278 30.62 180.086 30.852C179.894 31.076 179.746 31.34 179.642 31.644C179.538 31.948 179.474 32.26 179.45 32.58H183.962ZM187.737 31.2H187.773C187.829 31 187.929 30.812 188.073 30.636C188.225 30.46 188.405 30.308 188.613 30.18C188.829 30.052 189.065 29.956 189.321 29.892C189.585 29.82 189.857 29.788 190.137 29.796V30.252C189.897 30.22 189.621 30.244 189.309 30.324C189.005 30.404 188.713 30.58 188.433 30.852C188.321 30.972 188.221 31.088 188.133 31.2C188.053 31.312 187.985 31.436 187.929 31.572C187.873 31.708 187.829 31.86 187.797 32.028C187.765 32.196 187.745 32.396 187.737 32.628V36H187.281V29.832H187.737V31.2Z'\n            fill={color}\n          />\n          <path\n            d='M48.6655 6.51074V16.375H51.5776C53.0679 16.375 54.1069 15.6401 54.6948 14.1704C55.0161 13.3638 55.1768 12.4033 55.1768 11.2891C55.1768 9.75098 54.9341 8.57178 54.4487 7.75146C53.9702 6.92432 53.0132 6.51074 51.5776 6.51074H48.6655ZM52.1108 3.88574C53.0474 3.89941 53.8267 4.00879 54.4487 4.21387C55.5083 4.5625 56.3662 5.20166 57.0225 6.13135C57.5488 6.8833 57.9077 7.69678 58.0991 8.57178C58.2905 9.44678 58.3862 10.2808 58.3862 11.0737C58.3862 13.0835 57.9829 14.7856 57.1763 16.1802C56.0825 18.0601 54.394 19 52.1108 19H45.5996V3.88574H52.1108ZM60.9907 21.1431L61.3599 21.1636C61.647 21.1772 61.9204 21.167 62.1802 21.1328C62.4399 21.0986 62.6587 21.02 62.8364 20.897C63.0073 20.7808 63.1646 20.5381 63.3081 20.1689C63.4585 19.7998 63.52 19.5742 63.4927 19.4922L59.3911 7.82324H62.6416L65.082 16.0674L67.3892 7.82324H70.4961L66.6611 18.8154C65.9229 20.9346 65.3384 22.2471 64.9077 22.7529C64.4771 23.2656 63.6157 23.522 62.3237 23.522C62.064 23.522 61.8555 23.5186 61.6982 23.5117C61.541 23.5117 61.3052 23.5015 60.9907 23.481V21.1431ZM75.2129 19H72.2905V3.88574H75.2129V19ZM84.2363 13.5654C84.0518 13.6816 83.8638 13.7773 83.6724 13.8525C83.4878 13.9209 83.2314 13.9858 82.9033 14.0474L82.2471 14.1704C81.6318 14.2798 81.1909 14.4131 80.9243 14.5703C80.4731 14.8369 80.2476 15.2505 80.2476 15.811C80.2476 16.3101 80.3843 16.6724 80.6577 16.8979C80.938 17.1167 81.2764 17.2261 81.6729 17.2261C82.3018 17.2261 82.8794 17.0415 83.4058 16.6724C83.939 16.3032 84.2158 15.6299 84.2363 14.6523V13.5654ZM82.4624 12.2017C83.0024 12.1333 83.3887 12.0479 83.6211 11.9453C84.0381 11.7676 84.2466 11.4907 84.2466 11.1147C84.2466 10.6567 84.0859 10.3423 83.7646 10.1714C83.4502 9.99365 82.9854 9.90479 82.3701 9.90479C81.6797 9.90479 81.1909 10.0757 80.9038 10.4175C80.6987 10.6704 80.562 11.0122 80.4937 11.4429H77.6738C77.7354 10.4653 78.0088 9.66211 78.4941 9.0332C79.2666 8.04883 80.5928 7.55664 82.4727 7.55664C83.6963 7.55664 84.7832 7.79932 85.7334 8.28467C86.6836 8.77002 87.1587 9.68604 87.1587 11.0327V16.1597C87.1587 16.5151 87.1655 16.9458 87.1792 17.4517C87.1997 17.8345 87.2578 18.0942 87.3535 18.231C87.4492 18.3677 87.5928 18.4805 87.7842 18.5693V19H84.6055C84.5166 18.7744 84.4551 18.5625 84.4209 18.3643C84.3867 18.166 84.3594 17.9404 84.3389 17.6875C83.9355 18.125 83.4707 18.4976 82.9443 18.8052C82.3154 19.1675 81.6045 19.3486 80.8115 19.3486C79.7998 19.3486 78.9624 19.0615 78.2993 18.4873C77.6431 17.9062 77.3149 17.0859 77.3149 16.0264C77.3149 14.6523 77.8447 13.6577 78.9043 13.0425C79.4854 12.7075 80.3398 12.4683 81.4678 12.3247L82.4624 12.2017ZM95.9565 7.55664C97.1118 7.55664 98.0552 7.86084 98.7866 8.46924C99.5249 9.0708 99.894 10.0723 99.894 11.4736V19H96.8999V12.2017C96.8999 11.6138 96.8213 11.1626 96.6641 10.8481C96.377 10.2739 95.8301 9.98682 95.0234 9.98682C94.0322 9.98682 93.3521 10.4072 92.9829 11.248C92.7915 11.6924 92.6958 12.2598 92.6958 12.9502V19H89.7837V7.84375H92.6035V9.47412C92.9795 8.8999 93.335 8.48633 93.6699 8.2334C94.2715 7.78223 95.0337 7.55664 95.9565 7.55664ZM110.743 3.88574L112.742 12.54L113.173 14.9497L113.614 12.5913L115.316 3.88574H118.648L120.443 12.54L120.904 14.9497L121.366 12.6323L123.386 3.88574H126.595L122.34 19H119.325L117.5 10.1611L116.967 7.23877L116.434 10.1611L114.608 19H111.676L107.39 3.88574H110.743ZM132.922 16.939C133.776 16.939 134.433 16.6348 134.891 16.0264C135.349 15.418 135.578 14.5532 135.578 13.4321C135.578 12.311 135.349 11.4497 134.891 10.8481C134.433 10.2397 133.776 9.93555 132.922 9.93555C132.067 9.93555 131.408 10.2397 130.943 10.8481C130.485 11.4497 130.256 12.311 130.256 13.4321C130.256 14.5532 130.485 15.418 130.943 16.0264C131.408 16.6348 132.067 16.939 132.922 16.939ZM138.644 13.4321C138.644 15.0728 138.172 16.4775 137.229 17.6465C136.285 18.8086 134.853 19.3896 132.932 19.3896C131.011 19.3896 129.579 18.8086 128.636 17.6465C127.692 16.4775 127.221 15.0728 127.221 13.4321C127.221 11.8188 127.692 10.4209 128.636 9.23828C129.579 8.05566 131.011 7.46436 132.932 7.46436C134.853 7.46436 136.285 8.05566 137.229 9.23828C138.172 10.4209 138.644 11.8188 138.644 13.4321ZM145.76 16.939C146.614 16.939 147.271 16.6348 147.729 16.0264C148.187 15.418 148.416 14.5532 148.416 13.4321C148.416 12.311 148.187 11.4497 147.729 10.8481C147.271 10.2397 146.614 9.93555 145.76 9.93555C144.905 9.93555 144.246 10.2397 143.781 10.8481C143.323 11.4497 143.094 12.311 143.094 13.4321C143.094 14.5532 143.323 15.418 143.781 16.0264C144.246 16.6348 144.905 16.939 145.76 16.939ZM151.481 13.4321C151.481 15.0728 151.01 16.4775 150.066 17.6465C149.123 18.8086 147.691 19.3896 145.77 19.3896C143.849 19.3896 142.417 18.8086 141.474 17.6465C140.53 16.4775 140.059 15.0728 140.059 13.4321C140.059 11.8188 140.53 10.4209 141.474 9.23828C142.417 8.05566 143.849 7.46436 145.77 7.46436C147.691 7.46436 149.123 8.05566 150.066 9.23828C151.01 10.4209 151.481 11.8188 151.481 13.4321ZM152.435 10.0073V7.92578H153.994V4.80859H156.885V7.92578H158.7V10.0073H156.885V15.9136C156.885 16.3716 156.943 16.6587 157.06 16.7749C157.176 16.8843 157.531 16.939 158.126 16.939C158.215 16.939 158.307 16.939 158.403 16.939C158.505 16.9321 158.604 16.9253 158.7 16.9185V19.1025L157.316 19.1538C155.935 19.2017 154.992 18.9624 154.486 18.436C154.158 18.1011 153.994 17.585 153.994 16.8877V10.0073H152.435ZM159.428 10.0073V7.92578H160.987V4.80859H163.878V7.92578H165.693V10.0073H163.878V15.9136C163.878 16.3716 163.937 16.6587 164.053 16.7749C164.169 16.8843 164.524 16.939 165.119 16.939C165.208 16.939 165.3 16.939 165.396 16.939C165.499 16.9321 165.598 16.9253 165.693 16.9185V19.1025L164.309 19.1538C162.928 19.2017 161.985 18.9624 161.479 18.436C161.151 18.1011 160.987 17.585 160.987 16.8877V10.0073H159.428ZM172.584 16.939C173.438 16.939 174.095 16.6348 174.553 16.0264C175.011 15.418 175.24 14.5532 175.24 13.4321C175.24 12.311 175.011 11.4497 174.553 10.8481C174.095 10.2397 173.438 9.93555 172.584 9.93555C171.729 9.93555 171.07 10.2397 170.605 10.8481C170.147 11.4497 169.918 12.311 169.918 13.4321C169.918 14.5532 170.147 15.418 170.605 16.0264C171.07 16.6348 171.729 16.939 172.584 16.939ZM178.306 13.4321C178.306 15.0728 177.834 16.4775 176.891 17.6465C175.947 18.8086 174.515 19.3896 172.594 19.3896C170.673 19.3896 169.241 18.8086 168.298 17.6465C167.354 16.4775 166.883 15.0728 166.883 13.4321C166.883 11.8188 167.354 10.4209 168.298 9.23828C169.241 8.05566 170.673 7.46436 172.594 7.46436C174.515 7.46436 175.947 8.05566 176.891 9.23828C177.834 10.4209 178.306 11.8188 178.306 13.4321ZM186.601 7.55664C187.756 7.55664 188.7 7.86084 189.431 8.46924C190.169 9.0708 190.539 10.0723 190.539 11.4736V19H187.544V12.2017C187.544 11.6138 187.466 11.1626 187.309 10.8481C187.021 10.2739 186.475 9.98682 185.668 9.98682C184.677 9.98682 183.997 10.4072 183.627 11.248C183.436 11.6924 183.34 12.2598 183.34 12.9502V19H180.428V7.84375H183.248V9.47412C183.624 8.8999 183.979 8.48633 184.314 8.2334C184.916 7.78223 185.678 7.55664 186.601 7.55664Z'\n            fill={color}\n          />\n\n          <rect  y='3' width='7' height='33' fill={color} />\n          <rect  y='30' x='7.5' width='7' height='6' fill={color} />\n          <rect  y='16' x='15' width='7' height='20' fill={color} />\n          <rect  y='30' x='22.5' width='7' height='6' fill={color} />\n          <rect  y='3' x='30' width='7' height='33' fill={color} />\n        </svg>\n      </NavLink>\n    </div>\n  );\n};\n\nexport default Logo;\n","import React, {useState} from \"react\";\nimport Logo from \"./HeaderLogo\";\n/*import Menu from \"./Menu\";*/\nimport styles from \"./Header.module.scss\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Button from \"@material-ui/core/Button\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Menu from \"@material-ui/icons/Menu\";\nimport Close from \"@material-ui/icons/Close\";\nimport HeaderLinks from \"./HeaderLinks\";\nimport Fade from 'react-reveal';\n\nconst Header = (props) => {\n  const [drawerOpen, setDrawerOpen] = useState(false);\n\n  const handleDrawerToggle = () => {\n    setDrawerOpen(!drawerOpen);\n  };\n\n  return (\n    <AppBar className={styles.appBar} elevation={0} style={{\"background-color\": \"white\"}}>\n      <Toolbar className={styles.toolBar} style={{width: \"100%\"}}>\n        <Logo />\n        {/*<Hidden smDown implementation='css'>\n          <HeaderLinks></HeaderLinks>\n  </Hidden>*/}\n          <IconButton\n            style={{float: \"right\"}}\n            color='#2a2a2a'\n            aria-label='open drawer'\n            onClick={handleDrawerToggle}>\n            <Menu />\n          </IconButton>\n        \n      </Toolbar>\n                <Hidden implementation='js'>\n\n      <Drawer variant='temporary'  anchor={\"top\"} classes={styles.overlayDrawer}  open={drawerOpen} onClose={handleDrawerToggle}>\n          <div className={styles.overlayDrawer}>\n          <Toolbar className={styles.toolBar} style={{width: \"100%\"}}>\n            <Fade>\n              <Logo color={'white'}/>\n            </Fade>\n        \n        {/*<Hidden smDown implementation='css'>\n          <HeaderLinks></HeaderLinks>\n  </Hidden>*/}\n          <IconButton\n            style={{float: \"right\", color:'#ffffff'}}\n            aria-label='open drawer'\n            onClick={handleDrawerToggle}>\n            <Close />\n          </IconButton>\n\n      </Toolbar>\n            {\" \"}\n            <HeaderLinks onClick={handleDrawerToggle}></HeaderLinks>\n          </div>\n        </Drawer>\n        </Hidden>\n\n    </AppBar>\n  );\n};\n\nHeader.defaultProp = {\n  color: \"white\",\n};\n\nexport default Header;\n","import React from \"react\";\nimport { MemoryRouter, Link as RouterLink, Route, Switch, withRouter } from \"react-router-dom\";\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\n/*import Home from \"../Home/Home\";\nimport About from \"../About/About.jsx\"\nimport Portfolio from \"../Projects/Portfolio.jsx\"\nimport ProjectRoutes from \"../Routes/ProjectRoutes\";*/\nimport Loadable from 'react-loadable';\n\nfunction Loading({ error }) {\n  if (error) {\n    return 'Oh nooess!';\n  } else {\n    console.log('in your loading!!!')\n    return <h3>Loading...</h3>;\n  }\n}\n\nconst ProjectRoutes = Loadable({\n  loader: () => import('../Routes/ProjectRoutes'),\n  loading: Loading\n});\n\nconst Portfolio = Loadable({\n  loader: () => import('../Projects/Portfolio.jsx'),\n  loading: Loading\n});\n\nconst Home = Loadable({\n  loader: () => import('../Home/Home'),\n  loading: Loading\n})\n\nconst About = Loadable({\n  loader: () => import('../About/About'),\n  loading: Loading\n})\n\n\nconst Main = ({location})=>{\n    return <TransitionGroup className=\"transition-group\">\n    <CSSTransition key={location.key} timeout={500} classNames=\"fade\">\n      <section className=\"route-section\">\n        <Switch>\n            <div>\n          <Route exact path=\"/About\" component={About}></Route>\n          <Route path=\"/Portfolio\" component={Portfolio}>\n          <ProjectRoutes/>\n          </Route>\n          <Route exact path=\"/\" component={Home}></Route>\n\n            \n            </div>\n         \n        </Switch>\n      </section>\n    </CSSTransition>\n  </TransitionGroup>\n}\n\nexport default withRouter(Main);","import React from \"react\";\nimport \"./App.scss\";\nimport { Router } from \"react-router-dom\";\n\nimport styles from \"./App.module.scss\";\nimport { StylesProvider } from \"@material-ui/core/styles\";\n\nimport Header from \"./common/Components/Header/Header\";\nimport Main from \"./common/Components/Main/Main\";\nimport { createBrowserHistory as createHistory } from \"history\";\n\nfunction App() {\n  const history = createHistory();\n  history.listen((location,action)=>{\n    window.scrollTo(0,0);\n  })\n  return (\n    <StylesProvider injectFirst>\n      <div className={styles.App}>\n        <Router history={history}>\n          <Header></Header>\n\n          <div className={styles.main}>\n            <Main></Main>\n          </div>\n        </Router>\n      </div>\n    </StylesProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"App_root__2CSG3\",\"title\":\"App_title__2oBiX\",\"titleName\":\"App_titleName__2VuTV\",\"titleContent\":\"App_titleContent__tNckP\",\"App\":\"App_App__15LM-\",\"main\":\"App_main__uN9ca\",\"header\":\"App_header__2L3DO\",\"titleGroup\":\"App_titleGroup__3GHRu\",\"App-logo\":\"App_App-logo__1GLNd\",\"secondPage\":\"App_secondPage__2FEBH\",\"landingContainer\":\"App_landingContainer__EhrCT\",\"App-header\":\"App_App-header__3nnPn\",\"App-link\":\"App_App-link__TRj1P\",\"social\":\"App_social__tfh7z\",\"nav\":\"App_nav__UeHIZ\",\"App-logo-spin\":\"App_App-logo-spin__1EbLw\"};","import React, { useState } from \"react\";\n\n// react components for routing our app without refresh\nimport { Link } from \"react-router-dom\";\nimport Lottie from \"react-lottie\";\nimport * as animationData from \"./copiedEmail.json\";\n// @material-ui/core components\nimport List from \"@material-ui/core/List\";\nimport Button from \"@material-ui/core/Button\";\n\nimport ListItem from \"@material-ui/core/ListItem\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport styles from \"./Header.module.scss\";\nimport { useLocation } from \"react-router-dom\";\n\nimport {Trail} from \"../../Animations/Animations\";\n\nconst MENU_ITEM_TYPES = {\n  internalLink: \"internalLink\",\n  externalLink: \"externalLink\",\n};\nconst MENU_ITEMS = [\n  { to: \"/\", type: \"internalLink\", displayText: \"Home\" },\n  /* { to: \"/Portfolio\", type: \"internalLink\", displayText: \"Portfolio\" },\n { to: \"/About\", type: \"internalLink\", displayText: \"About\" },*/\n  { to: \"https://www.twitter.com/WoottonDylan\", type: \"externalLink\", displayText: \"Twitter\" },\n  {\n    to: \"https://www.linkedin.com/in/dylanwootton/\",\n    type: \"externalLink\",\n    displayText: \"LinkedIn\",\n  },\n];\nconst MenuItem = (props) => {\n  const {item, selected, onClick} = props;\n  let content;\n  if (item.type === MENU_ITEM_TYPES.internalLink) {\n    content = <Link onClick={onClick}to={item.to}>{item.displayText}</Link>;\n  } else if (item.type === MENU_ITEM_TYPES.externalLink) {\n    content = (<a href={item.to} target='_blank' rel='noopener'>\n      {item.displayText}\n    </a>)\n  }\n  return <li {...props}>{content}</li>;\n};\n\n\n\nconst NavigationMenu = ({onClick}) => {\n  const location = useLocation();\n\n  return (\n    <div class={styles[\"overlay-content\"]}>\n        <ul>\n        <Trail delay={200}>\n\n          {MENU_ITEMS.map((item,index) => {\n            return<MenuItem item={item} onClick={onClick}selected={location === item.to}></MenuItem>;\n          })}\n</Trail>\n        </ul>\n    </div>\n  );\n};\nexport default NavigationMenu;\n\n/*\nfunction OverlayFooter(props) {\n  const defaultOptions = {\n    loop: false,\n    autoplay: true,\n    animationData: animationData.default,\n    rendererSettings: {\n      preserveAspectRatio: \"xMidYMid slice\",\n    },\n  };\n  const mapper = {\n    toCopy: <span>Click to copy my email!</span>,\n    copied: (\n      <div>\n        <Lottie\n          options={defaultOptions}\n          height={40}\n          width={40}\n          isPaused={false}\n          isStopped={false}\n        />\n        <span className={styles.copiedText}>Copied Email!</span>\n      </div>\n    ),\n  };\n  const [emailContent, setEmailContent] = useState(\"toCopy\");\n  return (\n    <List className={styles.list} style={{ flexDirection: \"row\", display: \"flex\" }}>\n      <ListItem className={styles.listItem}>\n        <Tooltip\n          id='mail-tooltip'\n          title={mapper[emailContent]}\n          placement={\"bottom\"}\n          classes={{ tooltip: styles.tooltip }}\n          enterDelay={500}\n          leaveDelay={200}>\n          <IconButton\n            aria-label='copyEmail'\n            className={styles.listItemButton}\n            onMouseLeave={() => {\n              setTimeout(function () {\n                setEmailContent(\"toCopy\");\n              }, 400);\n            }}\n            onClick={(event) => {\n              //console.log(document.querySelector('#mail-tooltip div'))\n              //document.querySelector('#mail-tooltip div').style.backgroundColor = \"#CCFFCC\";\n              //document.querySelector('#mail-tooltip div').innerHTML = \"Copied!\";\n\n              copyEmail(event);\n              setEmailContent(\"copied\");\n            }}>\n            <MailIcon color={\"white\"} />\n          </IconButton>\n        </Tooltip>\n      </ListItem>\n      <ListItem className={styles.listItem}>\n        <Tooltip\n          id='instagram-twitter'\n          title='Follow me on twitter'\n          placement={\"bottom\"}\n          classes={{ tooltip: styles.tooltip }}>\n          <IconButton\n            className={styles.listItemButton}\n            aria-label='delete'\n            href='https://twitter.com/WoottonDylan'\n            target='_blank'\n            rel='noopener noreferrer'>\n            <TwitterIcon color={\"white\"} />\n          </IconButton>\n        </Tooltip>\n      </ListItem>\n      <ListItem className={styles.listItem}>\n        <Tooltip\n          id='instagram-twitter'\n          title='Connect with me on Linkedin'\n          placement={\"bottom\"}\n          classes={{ tooltip: styles.tooltip }}>\n          <IconButton\n            className={styles.listItemButton}\n            aria-label='delete'\n            href='https://www.linkedin.com/in/dylanwootton/'\n            target='_blank'\n            rel='noopener noreferrer'>\n            <LinkedInIcon color={\"white\"} />\n          </IconButton>\n        </Tooltip>\n      </ListItem>\n    </List>\n  );\n}\n\nexport function HeaderLinksOnTop(props) {\n  const defaultOptions = {\n    loop: false,\n    autoplay: true,\n    animationData: animationData.default,\n    rendererSettings: {\n      preserveAspectRatio: \"xMidYMid slice\",\n    },\n  };\n  const mapper = {\n    toCopy: <span>Click to copy my email!</span>,\n    copied: (\n      <div>\n        <Lottie\n          options={defaultOptions}\n          height={40}\n          width={40}\n          isPaused={false}\n          isStopped={false}\n        />\n        <span className={styles.copiedText}>Copied Email!</span>\n      </div>\n    ),\n  };\n  const [emailContent, setEmailContent] = useState(\"toCopy\");\n  return (\n    <List className={styles.list} style={{ flexDirection: \"column\", display: \"flex\" }}>\n      <ListItem className={styles.listItem}>\n        <Tooltip\n          id='mail-tooltip'\n          title={mapper[emailContent]}\n          placement={\"bottom\"}\n          classes={{ tooltip: styles.tooltip }}\n          enterDelay={500}\n          leaveDelay={200}>\n          <IconButton\n            aria-label='copyEmail'\n            className={styles.listItemButton}\n            onMouseLeave={() => {\n              setTimeout(function () {\n                setEmailContent(\"toCopy\");\n              }, 400);\n            }}\n            onClick={(event) => {\n              //console.log(document.querySelector('#mail-tooltip div'))\n              //document.querySelector('#mail-tooltip div').style.backgroundColor = \"#CCFFCC\";\n              //document.querySelector('#mail-tooltip div').innerHTML = \"Copied!\";\n\n              copyEmail(event);\n              setEmailContent(\"copied\");\n            }}>\n            <MailIcon color={\"white\"} />\n          </IconButton>\n        </Tooltip>\n      </ListItem>\n      <ListItem className={styles.listItem}>\n        <Tooltip\n          id='instagram-twitter'\n          title='Follow me on twitter'\n          placement={\"bottom\"}\n          classes={{ tooltip: styles.tooltip }}>\n          <IconButton\n            className={styles.listItemButton}\n            aria-label='delete'\n            href='https://twitter.com/WoottonDylan'\n            target='_blank'\n            rel='noopener noreferrer'>\n            <TwitterIcon color={\"white\"} />\n          </IconButton>\n        </Tooltip>\n      </ListItem>\n      <ListItem className={styles.listItem}>\n        <Tooltip\n          id='instagram-twitter'\n          title='Connect with me on Linkedin'\n          placement={\"bottom\"}\n          classes={{ tooltip: styles.tooltip }}>\n          <IconButton\n            className={styles.listItemButton}\n            aria-label='delete'\n            href='https://www.linkedin.com/in/dylanwootton/'\n            target='_blank'\n            rel='noopener noreferrer'>\n            <LinkedInIcon color={\"white\"} />\n          </IconButton>\n        </Tooltip>\n      </ListItem>\n    </List>\n  );\n}\n*/\n\nexport function EmailCopyButton(props) {\n  const defaultOptions = {\n    loop: false,\n    autoplay: true,\n    animationData: animationData.default,\n    rendererSettings: {\n      preserveAspectRatio: \"xMidYMid slice\",\n    },\n  };\n  const mapper = {\n    toCopy: <span>Click to copy my email!</span>,\n    copied: (\n      <div>\n        <Lottie\n          options={defaultOptions}\n          height={40}\n          width={40}\n          isPaused={false}\n          isStopped={false}\n        />\n        <span className={styles.copiedText}>Copied Email!</span>\n      </div>\n    ),\n  };\n  const [emailContent, setEmailContent] = useState(\"toCopy\");\n  return (\n        <Tooltip\n          id='mail-tooltip'\n          title={mapper[emailContent]}\n          placement={\"top\"}\n          classes={{ tooltip: styles.tooltip }}\n          enterDelay={500}\n          leaveDelay={200}>\n          <Button\n            aria-label='copyEmail'\n            className={styles.listItemButton}\n            onMouseLeave={() => {\n              setTimeout(function () {\n                setEmailContent(\"toCopy\");\n              }, 400);\n            }}\n            {...props}\n            onClick={(event) => {\n\n\n              copyEmail(event);\n              setEmailContent(\"copied\");\n            }}>\n              Contact Me\n            </Button>\n        </Tooltip>\n\n  );\n}\n\nasync function copyEmail(e) {\n  if (navigator.clipboard) {\n    e.preventDefault();\n    //e.nativeEvent.preventDefault();\n    //e.nativeEvent.stopPropogation();\n    await navigator.clipboard.writeText(\"wootton.dylan@gmail.com\");\n    return;\n  }\n}\n\nfunction copyToClipboard(text) {\n  var dummy = document.createElement(\"input\");\n  document.body.appendChild(dummy);\n  dummy.setAttribute(\"value\", text);\n  dummy.select();\n  document.execCommand(\"copy\");\n  document.body.removeChild(dummy);\n}\n"],"sourceRoot":""}